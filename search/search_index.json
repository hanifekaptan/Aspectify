{"config":{"lang":["en","tr"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Aspectify","text":"<p>An Aspect-Based Sentiment Analysis (ABSA) Application</p> <p>Aspectify is an application that performs aspect-based sentiment analysis on text and audio content using Google's Gemini AI models. By analyzing sentiments for different aspects within the same text, it provides detailed insights into user opinions.</p>"},{"location":"#features","title":"Features","text":"<ul> <li>\ud83c\udfaf Aspect-Based Analysis: Detects aspects within the text and performs sentiment analysis for each one.</li> <li>\ud83c\udfa4 Audio Support: Transcribes audio files to include them in the analysis process.</li> <li>\ud83c\udf0d Multi-language Support: Dynamically determines the content language and supports multiple languages.</li> <li>\ud83e\udd16 AI-Powered: Uses Google Gemini models for sentiment analysis.</li> <li>\ud83d\udcca Detailed Results: Provides detailed output including polarity, confidence scores, aspects, and quotes.</li> <li>\ud83d\udcdd Logging: Implements application logging for debugging and monitoring.</li> </ul>"},{"location":"#quick-start","title":"Quick Start","text":"<pre><code>from app.agents.absa_agent import run_absa\n\ntext = \"The camera is great, but the battery life is bad.\"\n\nresult = await run_absa(text)\nprint(f\"Overall sentiment: {result.polarity}\")\nprint(f\"Confidence: {result.score}\")\nfor aspect in result.aspects:\n    print(f\"{aspect.aspect}: {aspect.sentiment} ({aspect.score})\")\n</code></pre>"},{"location":"#architecture","title":"Architecture","text":"<p>Aspectify follows a modular architecture: - agents: Manages analysis workflows and the agent structure. - ai_models: Defines integrations for Google Gemini and OpenAI Whisper models. - tools: Provides specialized analysis tools and utilities. - logic: Contains the core business logic for content processing. - schemas: Defines the data models. - core: Establishes the configuration and logging infrastructure.</p>"},{"location":"#getting-started","title":"Getting Started","text":"<ol> <li>Installation - Set up the development environment</li> <li>Configuration - Configure the settings</li> <li>Quick Start - Run your first analysis</li> </ol>"},{"location":"#documentation","title":"Documentation","text":"<ol> <li> <p>Architecture: This section covers the design principles and overall structure of the system. It details the main components and their interactions. It provides information on the technology stack, including programming languages, frameworks, and databases. Additionally, it explains the main folder structure, the responsibilities of each module, and outlines the lifecycle of an API request within the system.</p> </li> <li> <p>Development Guide: This guide, aimed at those looking to contribute to the project's codebase, covers the entire development process. It provides a step-by-step explanation of how to set up the local environment for a developer to work on their machine. It defines the coding standards and linter rules that must be followed to ensure code consistency across the project. Finally, it demonstrates how to prepare and run tests to ensure the quality and correctness of the written code.</p> </li> <li> <p>Deployment Guide: This guide focuses on the process of deploying the application to a live production environment where it will serve end-users. It specifies the requirements for servers, databases, and other infrastructure services needed for the application to run smoothly. It describes production-specific configuration steps and how to set environment variables. It also explains how to configure the logging mechanism to track events and potential errors that occur while the system is running.</p> </li> <li> <p>API Reference: This technical reference, which defines how the application communicates with the outside world, details the usage of the API. It includes all available API endpoints, such as <code>GET /agents</code> and <code>POST /tasks</code>, and their functions. It presents the data models (schemas) that define the structure of the request and response bodies used for data exchange with the API. (Note: This section is currently under development.)</p> </li> </ol>"},{"location":"#example-output","title":"Example Output","text":"<pre><code>{\n  \"id\": \"uuid-goes-here\",\n  \"polarity\": \"neutral\",\n  \"score\": 0.5,\n  \"aspects\": [\n    {\n      \"aspect\": \"camera\",\n      \"sentiment\": \"positive\",\n      \"score\": 0.95,\n      \"quote\": \"the camera is great\"\n    },\n    {\n      \"aspect\": \"battery\",\n      \"sentiment\": \"negative\", \n      \"score\": 0.98,\n      \"quote\": \"the battery life is bad\"\n    }\n  ],\n  \"message\": \"ABSA completed successfully.\",\n  \"text\": \"The camera is great, but the battery life is bad.\"\n}\n</code></pre>"},{"location":"#support","title":"Support","text":"<p>For questions, issues, or contributions, please visit the GitHub repository. You can also contact me directly via Linkedin or E-mail.</p>"},{"location":"api/endpoints/","title":"API Endpoints","text":"<p>This document defines the planned RESTful endpoints for the Aspectify API.</p> <p>\u26a0\ufe0f Current Status: This API is still under development, and these endpoints are not yet active. This document serves as a roadmap to define the project's API vision and future interface.</p>"},{"location":"api/endpoints/#planned-endpoints","title":"Planned Endpoints","text":""},{"location":"api/endpoints/#initiate-analysis","title":"Initiate Analysis","text":"<ul> <li>Endpoint: <code>POST /analyze</code></li> <li>Description: Initiates a new text or audio analysis task. This is the main functional endpoint of the system.</li> <li>Request Body: Expects a JSON object conforming to the <code>MultiModalRequest</code> schema.</li> <li>Successful Response (200 OK): Returns a JSON object conforming to the <code>ABSAResponse</code> schema.</li> </ul> <p>Example Request (<code>curl</code>):</p> <pre><code>curl -X POST \"http://localhost:8000/analyze\" \\\n-H \"Content-Type: application/json\" \\\n-d '{\n  \"content\": \"The service was very fast, but the food was cold.\",\n  \"content_type\": \"text\"\n}'\n</code></pre>"},{"location":"api/endpoints/#query-task-status-future","title":"Query Task Status (Future)","text":"<ul> <li>Endpoint: <code>GET /tasks/{task_id}</code></li> <li>Description: Planned for querying the status of asynchronous analysis tasks that may take a long time, such as large audio files.</li> <li>Request Body: None.</li> <li>Successful Response (200 OK): Returns a JSON object containing the status of the task ('PENDING', 'SUCCESS', 'FAILED') and, if successful, the analysis result.</li> </ul>"},{"location":"api/schemas/","title":"Response Models","text":"<p>The Aspectify API uses structured and type-safe response models.</p>"},{"location":"api/schemas/#overview","title":"Overview","text":"<p>All API responses are validated and serialized using Pydantic models. This ensures type safety, automatic validation, and API documentation.</p>"},{"location":"api/schemas/#main-response-models","title":"Main Response Models","text":""},{"location":"api/schemas/#absaresponse","title":"ABSAResponse","text":"<p>The main aspect-based sentiment analysis response model.</p> <pre><code>class ABSAResponse(BaseModel):\n    id: str\n    polarity: str\n    score: float\n    aspects: List[AspectAnalysisResponse]\n    message: str\n    text: str\n</code></pre>"},{"location":"api/schemas/#fields","title":"Fields","text":"Field Type Description <code>id</code> <code>str</code> Unique analysis ID (UUID) <code>polarity</code> <code>str</code> Overall sentiment (positive/negative/neutral) <code>score</code> <code>float</code> Confidence score (0.0-1.0) <code>aspects</code> <code>List[AspectAnalysisResponse]</code> List of aspect analyses <code>message</code> <code>str</code> Operation status message <code>text</code> <code>str</code> The analyzed text"},{"location":"api/schemas/#example","title":"Example","text":"<pre><code>{\n  \"id\": \"123e4567-e89b-12d3-a456-426614174000\",\n  \"polarity\": \"neutral\",\n  \"score\": 0.5,\n  \"aspects\": [\n    {\n      \"aspect\": \"camera\",\n      \"sentiment\": \"positive\",\n      \"score\": 0.95,\n      \"quote\": \"the camera is great\"\n    }\n  ],\n  \"message\": \"ABSA completed successfully.\",\n  \"text\": \"The camera of this phone is great.\"\n}```\n\n### AspectAnalysisResponse\n\nThe aspect analysis response model.\n\n```python\nclass AspectAnalysisResponse(BaseModel):\n    aspect: str\n    sentiment: str\n    score: float\n    quote: str\n</code></pre>"},{"location":"api/schemas/#fields_1","title":"Fields","text":"Field Type Description <code>aspect</code> <code>str</code> Name of the aspect (e.g., \"camera\", \"battery\") <code>sentiment</code> <code>str</code> Sentiment of the aspect (positive/negative/neutral) <code>score</code> <code>float</code> Confidence score (0.0-1.0) <code>quote</code> <code>str</code> The relevant quote from the text"},{"location":"api/schemas/#example_1","title":"Example","text":"<pre><code>{\n  \"aspect\": \"camera\",\n  \"sentiment\": \"positive\",\n  \"score\": 0.95,\n  \"quote\": \"the camera takes great photos\"\n}\n</code></pre>"},{"location":"api/schemas/#llmresponse","title":"LLMResponse","text":"<p>The LLM model response model.</p> <pre><code>class LLMResponse(BaseModel):\n    polarity: str\n    score: float\n    aspects: List[AspectAnalysisResponse]\n</code></pre>"},{"location":"api/schemas/#fields_2","title":"Fields","text":"Field Type Description <code>polarity</code> <code>str</code> Overall sentiment (positive/negative/neutral) <code>score</code> <code>float</code> Confidence score (0.0-1.0) <code>aspects</code> <code>List[AspectAnalysisResponse]</code> List of aspect analyses"},{"location":"api/schemas/#example_2","title":"Example","text":"<pre><code>{\n  \"polarity\": \"positive\",\n  \"score\": 0.8,\n  \"aspects\": [\n    {\n      \"aspect\": \"quality\",\n      \"sentiment\": \"positive\",\n      \"score\": 0.9,\n      \"quote\": \"the quality is very good\"\n    }\n  ]\n}\n</code></pre>"},{"location":"api/schemas/#request-models","title":"Request Models","text":""},{"location":"api/schemas/#multimodalrequest","title":"MultiModalRequest","text":"<p>The multi-modal request model.</p> <pre><code>class MultiModalRequest(BaseModel):\n    data: str\n    language: Optional[str] = None\n</code></pre>"},{"location":"api/schemas/#fields_3","title":"Fields","text":"Field Type Description <code>data</code> <code>str</code> The text or file path to be analyzed <code>language</code> <code>Optional[str]</code> Optional language code"},{"location":"api/schemas/#example_3","title":"Example","text":"<pre><code>{\n  \"data\": \"This product is truly great!\",\n  \"language\": \"tr\"\n}\n</code></pre>"},{"location":"api/schemas/#data-types","title":"Data Types","text":""},{"location":"api/schemas/#sentiment-types","title":"Sentiment Types","text":"<pre><code>from typing import Literal\n\nPolarityType = Literal[\"positive\", \"negative\", \"neutral\"]\nSentimentType = Literal[\"positive\", \"negative\", \"neutral\"]\n</code></pre> <p>Values: - <code>positive</code>: Positive sentiment - <code>negative</code>: Negative sentiment - <code>neutral</code>: Neutral sentiment</p>"},{"location":"api/schemas/#content-types","title":"Content Types","text":"<pre><code>from typing import Literal\n\nContentType = Literal[\"text\", \"audio_path\"]\n</code></pre> <p>Values: - <code>text</code>: Plain text - <code>audio_path</code>: Audio file path</p>"},{"location":"api/schemas/#validation-rules","title":"Validation Rules","text":""},{"location":"api/schemas/#absaresponse-validation","title":"ABSAResponse Validation","text":"<pre><code>class ABSAResponse(BaseModel):\n    id: str = Field(..., description=\"Unique analysis ID\")\n    polarity: str = Field(..., regex=\"^(positive|negative|neutral)$\")\n    score: float = Field(..., ge=0.0, le=1.0, description=\"Confidence score\")\n    aspects: List[AspectAnalysisResponse] = Field(..., min_items=0)\n    message: str = Field(..., min_length=1)\n    text: str = Field(..., min_length=1)```\n\n### AspectAnalysisResponse Validation\n\n```python\nclass AspectAnalysisResponse(BaseModel):\n    aspect: str = Field(..., min_length=1, description=\"Name of the aspect\")\n    sentiment: str = Field(..., regex=\"^(positive|negative|neutral)$\")\n    score: float = Field(..., ge=0.0, le=1.0, description=\"Confidence score\")\n    quote: str = Field(..., min_length=1, description=\"Quote from the text\")\n</code></pre>"},{"location":"api/schemas/#serialization","title":"Serialization","text":""},{"location":"api/schemas/#json-serialization","title":"JSON Serialization","text":"<pre><code># Convert the model to JSON\nresponse = ABSAResponse(...)\njson_data = response.model_dump_json()\n\n# Create a model from JSON\njson_str = '{\"id\": \"123\", \"polarity\": \"positive\", ...}'\nresponse = ABSAResponse.model_validate_json(json_str)\n</code></pre>"},{"location":"api/schemas/#dict-serialization","title":"Dict Serialization","text":"<pre><code># Convert the model to a dict\nresponse = ABSAResponse(...)\ndict_data = response.model_dump()\n\n# Create a model from a dict\ndict_data = {\"id\": \"123\", \"polarity\": \"positive\", ...}\nresponse = ABSAResponse.model_validate(dict_data)\n</code></pre>"},{"location":"architecture/overview/","title":"System Architecture","text":"<p>Aspectify is a sentiment analysis platform developed using a modern Python architecture.</p>"},{"location":"architecture/overview/#overall-architecture","title":"Overall Architecture","text":"<pre><code>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502                    Aspectify Platform                       \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502  API Layer (FastAPI)                                        \u2502\n\u2502  \u251c\u2500\u2500 Endpoints &amp; Authentication                             \u2502\n\u2502  \u2514\u2500\u2500 Request/Response Models                                \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502  Core Logic &amp; Services Layer                                \u2502\n\u2502  \u251c\u2500\u2500 Agents (Orchestration &amp; Business Rules)                \u2502\n\u2502  \u251c\u2500\u2500 Business Services (e.g., AnalysisService)              \u2502\n\u2502  \u2514\u2500\u2500 AI/ML Services (Internal Wrappers)                     \u2502\n\u2502      \u251c\u2500\u2500 LLM Service (Gemini)                               \u2502\n\u2502      \u2514\u2500\u2500 Transcription Service (Whisper)                    \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502  Data Layer                                                 \u2502\n\u2502  \u251c\u2500\u2500 Database (PostgreSQL, Pinecone)                        \u2502\n\u2502  \u2514\u2500\u2500 File Storage                                           \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"architecture/overview/#module-structure","title":"Module Structure","text":""},{"location":"architecture/overview/#core","title":"\ud83c\udfd7\ufe0f Core","text":"<pre><code>app/core/\n\u251c\u2500\u2500 config.py          # Configuration management\n\u2514\u2500\u2500 logging_config.py  # Logging configuration\n</code></pre> <p>Responsibilities: - Application configuration - Environment variable management - Logging system</p>"},{"location":"architecture/overview/#agents","title":"\ud83e\udd16 Agents","text":"<pre><code>app/agents/\n\u2514\u2500\u2500 absa_agent.py      # Main ABSA analysis agent\n</code></pre> <p>Responsibilities: - Workflow management - Data processing coordination - Result formatting</p>"},{"location":"architecture/overview/#ai-models","title":"\ud83e\udde0 AI Models","text":"<pre><code>app/ai_models/\n\u251c\u2500\u2500 llm_models.py           # LLM model management\n\u2514\u2500\u2500 openai_whisper_models.py # Whisper model management\n</code></pre> <p>Responsibilities: - AI model connections - Model configuration</p>"},{"location":"architecture/overview/#logic","title":"\ud83d\udd27 Logic","text":"<pre><code>app/logic/\n\u251c\u2500\u2500 content_type_identifier.py  # Content type identification\n\u251c\u2500\u2500 language_detector.py        # Language detection\n\u2514\u2500\u2500 transcriber.py              # Audio transcription\n</code></pre> <p>Responsibilities: - Content type analysis - Language detection - Audio file processing</p>"},{"location":"architecture/overview/#tools","title":"\ud83d\udee0\ufe0f Tools","text":"<pre><code>app/tools/\n\u2514\u2500\u2500 absa_analyzer.py    # ABSA analysis tool\n</code></pre> <p>Responsibilities: - Sentiment analysis processing - Aspect identification - Result formatting</p>"},{"location":"architecture/overview/#schemas","title":"\ud83d\udccb Schemas","text":"<pre><code>app/schemas/\n\u251c\u2500\u2500 request/\n\u2502   \u2514\u2500\u2500 multi_modal_request.py  # Request models\n\u2514\u2500\u2500 response/\n    \u251c\u2500\u2500 absa_response.py        # ABSA response model\n    \u251c\u2500\u2500 aspect_response.py      # Aspect response model\n    \u2514\u2500\u2500 llm_response.py         # LLM response model\n</code></pre> <p>Responsibilities: - Data validation - API contracts - Type safety</p>"},{"location":"architecture/overview/#data-flow","title":"Data Flow","text":""},{"location":"architecture/overview/#1-input-processing","title":"1. Input Processing","text":"<pre><code>User Input \u2192 Content Type Identification \u2192 Language Detection\n</code></pre>"},{"location":"architecture/overview/#2-content-preparation","title":"2. Content Preparation","text":"<pre><code>Audio File \u2192 Transcription \u2192 Text\nText \u2192 Direct Processing\n</code></pre>"},{"location":"architecture/overview/#3-analysis-process","title":"3. Analysis Process","text":"<pre><code>Text \u2192 ABSA Tool \u2192 LLM Model \u2192 Result\n</code></pre>"},{"location":"architecture/overview/#4-result-formatting","title":"4. Result Formatting","text":"<pre><code>Raw Result \u2192 Pydantic Model \u2192 JSON Response\n</code></pre>"},{"location":"architecture/overview/#technology-stack","title":"Technology Stack","text":""},{"location":"architecture/overview/#backend","title":"Backend","text":"<ul> <li>Python 3.10: Main programming language</li> <li>FastAPI: Web framework</li> <li>Pydantic: Data validation</li> </ul>"},{"location":"architecture/overview/#aiml","title":"AI/ML","text":"<ul> <li>Google Gemini: LLM model</li> <li>OpenAI Whisper: Speech-to-text transcription</li> <li>LangChain: AI framework</li> </ul>"},{"location":"architecture/overview/#infrastructure","title":"Infrastructure","text":"<ul> <li>Docker: Containerization</li> <li>MkDocs: Documentation</li> <li>GitHub Pages: Documentation hosting</li> </ul>"},{"location":"architecture/overview/#future-plans","title":"Future Plans","text":""},{"location":"architecture/overview/#short-term","title":"Short-Term","text":"<ul> <li> API endpoints and validation</li> <li> Language detection independent of the application flow</li> <li> Caching step</li> <li> Text preprocessing before analysis</li> <li> Web interface</li> <li> Structural and vector database setup</li> <li> Logging setup</li> </ul>"},{"location":"architecture/overview/#long-term","title":"Long-Term","text":"<ul> <li> Task scoping with advanced prompt structures</li> <li> Advanced analysis</li> <li> Visual analysis</li> <li> Backend enhancements</li> </ul>"},{"location":"architecture/request-lifecycle/","title":"Request Lifecycle and Data Flow","text":"<p>This document describes the process from the moment a user sends a request to the Aspectify API until they receive a processed response, and explains the journey of data within the system.</p>"},{"location":"architecture/request-lifecycle/#high-level-flow","title":"High-Level Flow","text":"<p>The data flow in the system occurs across logical layers:</p> <ol> <li>API Layer: The user's request is received, authenticated, and validated using Pydantic models.</li> <li>Core Logic &amp; Services Layer: The validated data is directed to Agents and services for processing. Analysis and all other operations take place in this layer.</li> <li>Data Layer: Data required during the process is accessed.</li> <li>API Layer: The data obtained from the process is formatted using Pydantic models and returned to the user as a standard JSON response.</li> </ol>"},{"location":"architecture/request-lifecycle/#detailed-process-steps","title":"Detailed Process Steps","text":"<p>The analysis process in the Core Logic layer consists of five main steps:</p>"},{"location":"architecture/request-lifecycle/#1-input-processing","title":"1. Input Processing","text":"<p>Every request that enters the system first goes through a step to determine its content type (e.g., <code>text</code>, <code>audio file</code>). Then, the language of the content is detected to prepare it for the subsequent steps.</p> <pre><code>User Input \u2192 Content Type Identification \u2192 Language Detection\n</code></pre>"},{"location":"architecture/request-lifecycle/#2-content-preparation","title":"2. Content Preparation","text":"<p>If the incoming content is an audio file, it is transcribed into text using the <code>Whisper</code> model. If the content is already in text format, this step is skipped, and the process moves on to language detection.</p> <p><pre><code>Audio File \u2192 Transcription \u2192 Text \u2192 Language Detection\n</code></pre> <pre><code>Text \u2192 Language Detection\n</code></pre></p>"},{"location":"architecture/request-lifecycle/#3-language-detection","title":"3. Language Detection","text":"<p>Before the prepared text is sent to the Aspect-Based Sentiment Analysis (ABSA) tool, the language of the content is detected. A response in the appropriate language is returned based on the detected language.</p>"},{"location":"architecture/request-lifecycle/#4-analysis-process","title":"4. Analysis Process","text":"<p>The prepared text and the acquired language information are sent to the Aspect-Based Sentiment Analysis (ABSA) tool. This tool uses the <code>Gemini</code> LLM model to perform the analysis, extracting the sentiment and aspects from the text to produce a raw result.</p> <pre><code>Text \u2192 ABSA Tool \u2192 LLM Model \u2192 Result\n</code></pre>"},{"location":"architecture/request-lifecycle/#5-result-formatting","title":"5. Result Formatting","text":"<p>The raw result obtained from the analysis process is converted into a structured and consistent format using predefined Pydantic schemas. Finally, this structure is presented to the user as a standard JSON response via the API.</p> <pre><code>Raw Result \u2192 Pydantic Model \u2192 JSON Response\n</code></pre>"},{"location":"architecture/tech-stack/","title":"Technology Stack","text":"<p>The main components used in the Aspectify project are listed below, grouped by their area of responsibility.</p>"},{"location":"architecture/tech-stack/#app","title":"App","text":"<ul> <li>Python 3.10: The main programming language for the project. It was chosen for its modern syntax and rich library ecosystem.</li> <li>FastAPI: A high-performance, modern web framework. It is used for its asynchronous capabilities and automatic API documentation generation.</li> <li>Pydantic: Used for data validation, serialization, and type safety. It manages request and response models at the API layer.</li> </ul>"},{"location":"architecture/tech-stack/#aiml","title":"AI/ML","text":"<ul> <li>Google Gemini: The core Large Language Model (LLM) used for advanced language understanding and aspect-based sentiment analysis tasks.</li> <li>OpenAI Whisper: The model used for high-accuracy speech-to-text transcription from audio files.</li> <li>LangChain: A framework used to easily manage and chain AI models, tools, and workflows.</li> </ul>"},{"location":"architecture/tech-stack/#infrastructure-and-database","title":"Infrastructure and Database","text":"<ul> <li>Docker: Used for containerization to ensure the application and all its dependencies run consistently across different environments.</li> <li>PostgreSQL: The relational database used for storing structured data and main application data.</li> <li>Pinecone: The vector database used for efficiently storing and querying vector embeddings.</li> <li>MkDocs: A tool used to build a static website from Markdown files for project documentation.</li> <li>GitHub Pages: Used for publishing and hosting the generated documentation.</li> </ul>"},{"location":"deployment/infrastructure/","title":"Environment Requirements","text":"<p>This document defines the environment required to run the Aspectify platform in its current state, as well as the planned infrastructure for the project's future goals.</p>"},{"location":"deployment/infrastructure/#current-status-basic-requirements","title":"Current Status: Basic Requirements","text":"<p>To run the current version of the project, it is sufficient to have the following software installed on your system:</p> <ul> <li>Python: <code>3.10</code> or higher.</li> <li>pip: To install Python packages (uses the <code>requirements.txt</code> file).</li> <li>Git: To download the project code.</li> </ul>"},{"location":"deployment/infrastructure/#external-dependencies","title":"External Dependencies","text":"<p>The application's core analysis logic requires valid API keys to access the following external services. It is mandatory to configure these keys in the <code>.env</code> file:</p> <ul> <li>Google Gemini API Key</li> <li>OpenAI Whisper API Key</li> </ul>"},{"location":"deployment/infrastructure/#future-plans-planned-infrastructure","title":"Future Plans: Planned Infrastructure","text":"<p>The project's roadmap includes the following technologies to make it a more scalable and robust service. This document will be updated as these components are added.</p> <ul> <li>Containerization (Docker): Docker and Docker Compose integration is planned to ensure that the application and its dependencies run consistently across any environment.</li> <li>Data Layer (Database): PostgreSQL (for structured data) and Pinecone (for vector data) databases will be added to permanently store analysis results and enable more complex queries.</li> <li>API Layer (FastAPI): A REST API interface will be developed using FastAPI so that the application can be easily consumed by external services.</li> </ul>"},{"location":"deployment/logging/","title":"Logging System Configuration and Management","text":""},{"location":"deployment/logging/#overview","title":"Overview","text":"<ul> <li>Log File: All logs are written to the <code>logs/app.log</code> file in the application's root directory.</li> <li>Configuration: The log level and other settings are controlled via environment variables.</li> <li>Log Rotation: To prevent the log file from growing excessively, it is automatically rotated when its size reaches 10MB, and the last 5 files are kept.</li> </ul>"},{"location":"deployment/logging/#configuration","title":"Configuration","text":"<p>To control the log level, set the following variable in your <code>.env</code> file or in the server's environment variables.</p> <pre><code># Log level: DEBUG, INFO, WARNING, ERROR, CRITICAL\n# The recommended level for production environments is INFO or WARNING.\nLOG_LEVEL=INFO\n</code></pre>"},{"location":"deployment/logging/#log-format","title":"Log Format","text":"<p>All log entries are written in a standard format to facilitate analysis:</p> <ul> <li>Format: <code>Timestamp - Logger Name - Level - Message</code></li> <li>Example: <code>2024-01-15 10:30:45,123 - app.agents.absa_agent - INFO - ABSA analysis initiated</code></li> </ul>"},{"location":"deployment/logging/#log-file-management","title":"Log File Management","text":""},{"location":"deployment/logging/#log-rotation","title":"Log Rotation","text":"<p>The logging system automatically manages log files using <code>RotatingFileHandler</code>.</p> <ul> <li>Maximum File Size: <code>10 MB</code></li> <li>Backup Count: <code>5</code> (app.log, app.log.1, ..., app.log.4)</li> </ul> <p>These settings are defined in the <code>app/core/logging_config.py</code> file and should be updated there if changes are needed.</p>"},{"location":"deployment/logging/#log-cleanup","title":"Log Cleanup","text":"<p>The application does not include a built-in mechanism for automatically cleaning up old log files. To prevent disk space issues on the server, it is recommended to periodically archive or delete old files in the <code>logs/</code> directory using standard system tools like <code>logrotate</code> (on Linux) or scheduled tasks (cron jobs).</p>"},{"location":"deployment/logging/#security-notes","title":"Security Notes","text":"<ul> <li>Access Control: Access to the <code>logs/</code> directory and its log files should be restricted to authorized users and system services only.</li> <li>Sensitive Information: As per development standards, sensitive information should not be present in the logs. However, to protect against potential leaks, log files should not be considered secure.</li> </ul>"},{"location":"deployment/production-setup/","title":"Production Deployment Guide","text":"<p>This guide explains how to deploy the Aspectify application to a production environment as a persistent and stable service.</p> <p>Prerequisite: Before starting this guide, it is assumed that you are familiar with the project's basic setup steps. If necessary, please review the Main Installation Guide first.</p>"},{"location":"deployment/production-setup/#1-configuration-for-production","title":"1. Configuration for Production","text":"<p>Unlike the development environment, some values in the <code>.env</code> file need to be set carefully for a production environment.</p> <ol> <li>Navigate to the project's root directory on your server.</li> <li>Create your <code>.env</code> file using the command: <code>cp .env.example .env</code>.</li> <li> <p>Open the <code>.env</code> file and ensure you specifically set the following values for production:</p> <pre><code># .env (Critical Fields for Production)\n\n# APPLICATION SETTINGS\n# This disables the application's debug mode and improves performance.\nENVIRONMENT=production\n\n# SECURITY\n# Enter a long, complex, and unpredictable key.\n# You can generate one with a command like `openssl rand -hex 32`.\nSECRET_KEY=your_very_strong_and_random_secret_key_goes_here\n\n# LOGGING\n# Use INFO or WARNING in production to avoid unnecessary logs.\nLOG_LEVEL=INFO\n\n# EXTERNAL SERVICE API KEYS\n# Ensure that all API keys are the ones intended for production.\nGEMINI_API_KEY=[YOUR_PRODUCTION_GEMINI_API_KEY]\n</code></pre> </li> </ol> <p>Important Note: The project is currently in active development. Docker support, database integration, and an API layer are not yet available. This guide describes how to run the project in its current command-line-based state.</p>"},{"location":"development/coding-standards/","title":"Coding Standards and Git Workflow","text":"<p>This document serves as a guide to ensure the quality, readability, and long-term maintainability of the code in the Aspectify project. Our core philosophy is based on the principles of \"Clean Code,\" which means our goal is not just for the code to work, but also for it to be easily understood by another developer (including our future selves).</p> <p>To achieve this goal, we adhere to PEP 8, Python's official style guide.</p>"},{"location":"development/coding-standards/#coding-standards","title":"Coding Standards","text":"<p>Adherence to the following rules and best practices is expected to ensure code quality and consistency.</p>"},{"location":"development/coding-standards/#1-naming-conventions","title":"1. Naming Conventions","text":"<p>The following naming conventions have been adopted to ensure consistency throughout the project:</p> <ul> <li>Variables, Functions, and Modules: Should be named using lowercase letters with underscores between words (<code>snake_case</code>).<ul> <li>Examples: <code>process_data</code>, <code>user_name</code></li> </ul> </li> <li>Classes: Should be named using the <code>PascalCase</code> convention (each word starts with a capital letter).<ul> <li>Examples: <code>AnalysisService</code>, <code>MultiModalRequest</code></li> </ul> </li> <li>Constants: Should be named using all capital letters with underscores between words (<code>SCREAMING_SNAKE_CASE</code>).<ul> <li>Examples: <code>MAX_RETRIES</code>, <code>DEFAULT_TIMEOUT</code></li> </ul> </li> </ul>"},{"location":"development/coding-standards/#2-comments-and-docstrings","title":"2. Comments and Docstrings","text":"<p>Clear code is self-documenting code. However, when necessary, it is crucial to explain why the code is written a certain way.</p> <ul> <li>Use inline comments (starting with <code>#</code>) to explain code blocks that are complex or difficult to understand.</li> <li>All public modules, classes, and functions should include a docstring (<code>\"\"\"Docstring here.\"\"\"</code>) that explains what they do, the parameters they take, and the value they return. This helps with code comprehension and facilitates automatic documentation generation in the future.</li> </ul>"},{"location":"development/coding-standards/#3-readability-and-simplicity","title":"3. Readability and Simplicity","text":"<ul> <li>Single Responsibility Principle: Avoid making a function do too many things. Whenever possible, each function should have a single, well-defined responsibility.</li> <li>Don't Repeat Yourself (DRY): Prevent code duplication by moving repetitive logic into helper functions or classes.</li> <li>Line Length: To make code easier to read on different screens, it is a widely accepted practice to keep the line length ideally around 80-100 characters.</li> </ul>"},{"location":"development/coding-standards/#git-workflow","title":"Git Workflow","text":"<p>A clean Git history is one of our most valuable tools for understanding the project's evolution and tracking down potential bugs.</p>"},{"location":"development/coding-standards/#1-branch-management","title":"1. Branch Management","text":"<p>For each new task, create a new branch from the <code>main</code> branch. This ensures that the main branch remains stable at all times. Branch names should use the following prefixes to summarize the work being done:</p> <ul> <li><code>feature/</code>: When adding a new feature (e.g., <code>feature/add-caching</code>)</li> <li><code>fix/</code>: When fixing a bug (e.g., <code>fix/login-bug</code>)</li> <li><code>docs/</code>: For documentation-related changes (e.g., <code>docs/update-readme</code>)</li> </ul>"},{"location":"development/coding-standards/#2-commit-messages","title":"2. Commit Messages","text":"<p>A clear project history is at least as valuable as the code itself. Therefore, we follow the \"Conventional Commits\" standard.</p> <ul> <li>Format: <code>&lt;type&gt;: &lt;short description&gt;</code></li> <li> <p>Example Types:</p> <ul> <li><code>feat</code>: For a new feature.</li> <li><code>fix</code>: For a bug fix.</li> <li><code>docs</code>: For documentation-only changes.</li> <li><code>style</code>: For formatting changes that do not affect the meaning of the code.</li> <li><code>refactor</code>: For a code change that neither fixes a bug nor adds a feature.</li> <li><code>test</code>: For adding missing tests or correcting existing tests.</li> <li><code>chore</code>: For changes to the build process or auxiliary tools.</li> </ul> </li> <li> <p>Good Commit Message Examples: <pre><code>feat: Add multi-modal request support for audio files\nfix: Correctly handle Unicode characters in text analysis\ndocs: Update local setup guide with Docker instructions\n</code></pre></p> </li> </ul>"},{"location":"development/local-setup/","title":"Development Environment Setup","text":"<p>This guide explains how to prepare your development environment to contribute code to the project.</p>"},{"location":"development/local-setup/#step-1-basic-project-setup","title":"Step 1: Basic Project Setup","text":"<p>Before you can start the development process, you need to install all of the project's dependencies and get the application running on your local machine. These steps are described in detail in the main installation guide.</p> <p>Please complete the basic setup by following the guide below, and then return to this page.</p> <p>\u27a1\ufe0f Go to the Main Installation Guide</p>"},{"location":"development/local-setup/#step-2-developer-tools-and-workflows","title":"Step 2: Developer Tools and Workflows","text":"<p>If you have successfully completed the basic setup, you are now ready to start coding. To ensure an efficient and consistent development process, it is crucial that you review the following guides.</p>"},{"location":"development/local-setup/#code-quality-and-standards","title":"\u2705 Code Quality and Standards","text":"<p>In our project, we aim to maintain a clean, readable, and consistent codebase. To ensure that the code you write adheres to these standards, please read the following document carefully.</p> <ul> <li>Coding Standards Guide</li> </ul>"},{"location":"development/local-setup/#testing-guide","title":"\ud83e\uddea Testing Guide","text":"<p>We write tests to ensure that every new feature or bug fix does not break the existing system and to verify the correctness of your code. To learn how to run existing tests and add new ones:</p> <ul> <li>Testing Guide</li> </ul>"},{"location":"development/local-setup/#logging-for-developers","title":"\ud83e\udeb5 Logging for Developers","text":"<p>During development, you are expected to use the logging system effectively to understand your code's behavior and to debug issues. To learn how to use logs in your code:</p> <ul> <li>Logging Guide</li> </ul>"},{"location":"development/logging/","title":"Logging Guide for Developers","text":""},{"location":"development/logging/#using-the-logger","title":"Using the Logger","text":"<p>The application's main logger can be imported from the <code>app.core.logging_config</code> module. However, the best practice is for each module to create its own logger instance.</p> <pre><code>import logging\n\n# Create a module-specific logger\nlogger = logging.getLogger(__name__)\n\n# Use the logger\nlogger.info(\"This module has been initialized.\")\n</code></pre>"},{"location":"development/logging/#log-levels-and-their-use-cases","title":"Log Levels and Their Use Cases","text":"<p>Choosing the correct log level ensures that logs are meaningful and effective.</p> Level Description When to Use <code>DEBUG</code> Detailed information, typically of interest only when diagnosing problems. When tracking the value of a variable or the flow of a function. <code>INFO</code> Informational messages that highlight the normal progress of the application. To indicate that an operation has started, finished, or reached a significant milestone. <code>WARNING</code> An indication that something unexpected happened, but the application is still working as expected. For potential issues like a slow response from an API or a temporary connection problem. <code>ERROR</code> A serious error that prevented the application from performing a specific operation. For situations like a database connection failure, a file not being found, or invalid input. <code>CRITICAL</code> A very serious error, indicating that the program itself may be unable to continue running. For systemic crises like running out of disk space or memory."},{"location":"development/logging/#error-handling-and-logging","title":"Error Handling and Logging","text":"<p>When logging errors, it is important to provide as much context as possible. Logging within <code>try...except</code> blocks is standard practice.</p> <pre><code>try:\n    # An operation that might fail\n    result = risky_operation()\n    logger.info(\"Risky operation completed successfully.\")\nexcept Exception as e:\n    # The exc_info=True parameter adds the exception's stack trace to the log.\n    # This is vital for debugging.\n    logger.error(f\"An unexpected error occurred: {e}\", exc_info=True)\n    raise  # Re-raise the exception to halt the program's flow\n</code></pre>"},{"location":"development/logging/#security-avoid-logging-sensitive-information","title":"Security: Avoid Logging Sensitive Information","text":"<p>Never log sensitive information such as user passwords, API keys, tokens, or personal data.</p> <pre><code># \u274c WRONG APPROACH\nlogger.debug(f\"User login attempt: {username}, password: {password}\")\n\n# \u2705 CORRECT APPROACH\nlogger.info(f\"User login attempt: {username}\")\n</code></pre> <p>If necessary, use helper functions to mask data before logging it.</p>"},{"location":"development/testing-guide/","title":"Testing Guide","text":""},{"location":"development/testing-guide/#test-philosophy-and-future-vision","title":"Test Philosophy and Future Vision","text":"<ul> <li>Unit Tests: These are tests that verify the correct functionality of each function or class in isolation from other components. They ensure the robustness of the code's fundamental building blocks.</li> <li>Integration Tests: These tests check that multiple modules work together in harmony (for example, an API endpoint calling a service). They provide information about the overall health of the system.</li> </ul> <p>Current Status: At this stage of the project, the testing infrastructure has been planned, and test coverage is actively under development. The goal is for all future features and bug fixes to be submitted with corresponding tests.</p>"},{"location":"development/testing-guide/#tools-to-be-used","title":"Tools to be Used","text":"<p>We will use Pytest, the standard tool in the Python ecosystem, for writing and running tests in our project.</p> <ul> <li>Installation: Pytest will be included among the project's development dependencies by being added to the <code>requirements.txt</code> (or <code>requirements-dev.txt</code>) file.</li> </ul>"},{"location":"development/testing-guide/#running-tests","title":"Running Tests","text":"<p>Once the test suite is established, the following command will be used to run all tests from the project's root directory:</p> <pre><code>pytest\n</code></pre>"},{"location":"development/testing-guide/#how-to-write-new-tests","title":"How to Write New Tests","text":"<p>The following structure and standards will be followed for tests to be written in the future.</p>"},{"location":"development/testing-guide/#1-file-structure-and-naming","title":"1. File Structure and Naming","text":"<ul> <li>All test files will be located in the <code>tests/</code> folder in the project's root directory.</li> <li>The internal structure of the <code>tests/</code> folder will mirror the structure of the <code>app/</code> folder, which contains the source code.</li> <li>The names of test files and functions must start with the <code>test_</code> prefix.</li> </ul> <p>Example Structure:</p> <pre><code>\u251c\u2500\u2500 app/\n\u2502   \u2514\u2500\u2500 logic/\n\u2502       \u2514\u2500\u2500 language_detector.py\n\u2514\u2500\u2500 tests/\n    \u2514\u2500\u2500 logic/\n        \u2514\u2500\u2500 test_language_detector.py\n</code></pre>"},{"location":"development/testing-guide/#2-example-of-writing-a-test","title":"2. Example of Writing a Test","text":"<p>Below is an example of how to write a test for a simple helper function.</p> <p>Function to be Tested (<code>app/utils/formatters.py</code>):</p> <pre><code>def normalize_text(text: str) -&gt; str:\n    \"\"\"Converts text to lowercase and strips leading/trailing whitespace.\"\"\"\n    if not isinstance(text, str):\n        return \"\"\n    return text.strip().lower()\n</code></pre> <p>Test Code (<code>tests/utils/test_formatters.py</code>):</p> <pre><code>from app.utils.formatters import normalize_text\n\ndef test_normalize_text_with_mixed_case_and_whitespace():\n    \"\"\"Should correctly normalize text with mixed case and whitespace.\"\"\"\n    assert normalize_text(\"  Hello World  \") == \"hello world\"\n\ndef test_normalize_text_with_empty_string():\n    \"\"\"Should return an empty string when given an empty string.\"\"\"\n    assert normalize_text(\"\") == \"\"\n\ndef test_normalize_text_with_already_normalized_string():\n    \"\"\"Should not change an already normalized string.\"\"\"\n    assert normalize_text(\"already normal\") == \"already normal\"\n</code></pre> <p>This guide serves as a starting point for establishing a consistent and effective testing culture in the Aspectify project.</p>"},{"location":"getting-started/configuration/","title":"Configuration","text":"<p>Aspectify uses a centralized configuration system through the <code>app.core.config</code> module.</p>"},{"location":"getting-started/configuration/#configuration-file","title":"Configuration File","text":"<p>The main configuration is defined in the <code>app/core/config.py</code> file:</p> <pre><code>from dotenv import load_dotenv\nload_dotenv()\n\nfrom pydantic_settings import BaseSettings, SettingsConfigDict\nfrom pydantic import SecretStr\n\nclass Settings(BaseSettings):\n    model_config = SettingsConfigDict(env_file=\".env\", extra=\"ignore\")\n\n    PROJECT_NAME: str = \"Aspectify\"\n    PROJECT_VERSION: str = \"1.0.0\"\n    LOG_LEVEL: str = \"INFO\"\n    GOOGLE_API_KEY: SecretStr | None = None\n    GEMINI_2_5_PRO_MODEL: str = \"gemini-2.5-pro\"\n</code></pre>"},{"location":"getting-started/configuration/#environment-variables","title":"Environment Variables","text":"<p>Follow the instructions in the installation guide to create the <code>.env</code> file.</p>"},{"location":"getting-started/configuration/#configuration-options","title":"Configuration Options","text":""},{"location":"getting-started/configuration/#log-levels","title":"Log Levels","text":"<p>Available log levels:</p> <ul> <li><code>INFO</code>: General information about program execution</li> </ul>"},{"location":"getting-started/configuration/#ai-models","title":"AI Models","text":"<p>Currently supported Gemini models:</p> <ul> <li><code>gemini-2.5-pro</code>: Latest Gemini model</li> </ul>"},{"location":"getting-started/configuration/#using-the-configuration","title":"Using the Configuration","text":"<p>Access the configuration settings in your code:</p> <pre><code>from app.core.config import settings\n\nprint(f\"Project: {settings.PROJECT_NAME}\")\nprint(f\"Version: {settings.PROJECT_VERSION}\")\nprint(f\"Log Level: {settings.LOG_LEVEL}\")\n\nif settings.GOOGLE_API_KEY:\n    api_key = settings.GOOGLE_API_KEY.get_secret_value()\n</code></pre>"},{"location":"getting-started/configuration/#validation","title":"Validation","text":"<p>The configuration system uses Pydantic for validation:</p> <ul> <li>It ensures correct data types through type checking.</li> <li>It assigns reasonable default values.</li> </ul>"},{"location":"getting-started/configuration/#troubleshooting","title":"Troubleshooting","text":""},{"location":"getting-started/configuration/#configuration-not-loading","title":"Configuration Not Loading","text":"<ol> <li>Check that the <code>.env</code> file is in the project's root directory.</li> <li>Verify the file permissions.</li> <li>Ensure there are no syntax errors in the <code>.env</code> file.</li> </ol>"},{"location":"getting-started/configuration/#api-key-issues","title":"API Key Issues","text":"<ol> <li>Verify that the key was copied correctly (no extra spaces).</li> <li>Check that the key has the appropriate permissions.</li> <li>Make sure the key has not expired.</li> </ol>"},{"location":"getting-started/configuration/#model-configuration","title":"Model Configuration","text":"<ol> <li>Verify that the model name is correct.</li> <li>Check that the model is available in your region.</li> <li>Ensure the API key has access to the model.</li> </ol>"},{"location":"getting-started/installation/","title":"Installation","text":"<p>This guide will help you set up the Aspectify development environment.</p>"},{"location":"getting-started/installation/#prerequisites","title":"Prerequisites","text":"<ul> <li>Python 3.10</li> <li>pip (Python package installer)</li> <li>Git</li> </ul>"},{"location":"getting-started/installation/#step-1-clone-the-repository","title":"Step 1: Clone the Repository","text":"<pre><code>git clone https://github.com/hanifekaptan/Aspectify.git\ncd Aspectify\n</code></pre>"},{"location":"getting-started/installation/#step-2-create-a-virtual-environment","title":"Step 2: Create a Virtual Environment","text":"<pre><code>python -m venv .venv\n</code></pre>"},{"location":"getting-started/installation/#windows","title":"Windows:","text":"<pre><code>.venv\\Scripts\\activate\n</code></pre>"},{"location":"getting-started/installation/#macoslinux","title":"macOS/Linux:","text":"<pre><code>source .venv/bin/activate\n</code></pre>"},{"location":"getting-started/installation/#step-3-install-dependencies","title":"Step 3: Install Dependencies","text":"<pre><code>pip install -r requirements.txt\n</code></pre>"},{"location":"getting-started/installation/#step-4-configure-the-environment","title":"Step 4: Configure the Environment","text":"<p>Create a <code>.env</code> file in the project's root directory:</p> <pre><code>GOOGLE_API_KEY=your_google_api_key_here\nLOG_LEVEL=INFO\nPROJECT_NAME=\"Aspectify\"\nPROJECT_VERSION=\"1.0.0\"\n</code></pre>"},{"location":"getting-started/installation/#step-5-verify-the-installation","title":"Step 5: Verify the Installation","text":"<p>Verify that everything is working by running the test script:</p> <pre><code>python main.py\n</code></pre> <p>You should see an output similar to this:</p> <pre><code>--------------------------------------------------\nReading test data and performing sentiment analysis...\n--------------------------------------------------\n\nAnalyzed Text: The camera of the new phone I bought takes great photos, but the battery barely lasts a day.\nExpected Sentiment: neutral\nAgent Result (Polarity): neutral\nAgent Result (Score): 0.5\nAgent Result (Aspects): [AspectAnalysisResponse(aspect='camera', sentiment='positive', score=0.98), AspectAnalysisResponse(aspect='battery', sentiment='negative', score=0.99)]\n</code></pre>"},{"location":"getting-started/installation/#troubleshooting","title":"Troubleshooting","text":""},{"location":"getting-started/installation/#common-issues","title":"Common Issues","text":"<ol> <li>ModuleNotFoundError: Make sure you have activated the virtual environment.</li> <li>API Key Error: Check that your Google API key is set correctly in the <code>.env</code> file.</li> </ol>"},{"location":"getting-started/installation/#getting-a-google-api-key","title":"Getting a Google API Key","text":"<ol> <li>Visit Google AI Studio</li> <li>Create a new project or select an existing one</li> <li>Create an API key</li> <li>Copy the key into your <code>.env</code> file</li> </ol>"},{"location":"getting-started/installation/#next-steps","title":"Next Steps","text":"<ul> <li>Configuration - Learn about the application configuration</li> <li>Quick Start - Run your first analysis</li> </ul>"},{"location":"getting-started/quick-start/","title":"Quick Start","text":"<p>This guide will help you perform your first sentiment analysis with Aspectify.</p>"},{"location":"getting-started/quick-start/#basic-usage","title":"Basic Usage","text":""},{"location":"getting-started/quick-start/#1-text-analysis","title":"1. Text Analysis","text":"<p>The simplest way to use the application:</p> <pre><code>import asyncio\nfrom app.agents.absa_agent import run_absa\n\nasync def main():\n    text = \"This phone's camera is great, but its battery is very bad.\"\n    result = await run_absa(text)\n\n    print(f\"Overall Sentiment: {result.polarity}\")\n    print(f\"Confidence Score: {result.score}\")\n    print(\"Aspects:\")\n    for aspect in result.aspects:\n        print(f\"  - {aspect.aspect}: {aspect.sentiment} ({aspect.score})\")\n\nasyncio.run(main())\n</code></pre>"},{"location":"getting-started/quick-start/#2-audio-file-analysis","title":"2. Audio File Analysis","text":"<p>You can also analyze audio files:</p> <pre><code>import asyncio\nfrom app.agents.absa_agent import run_absa\n\nasync def main():\n    audio_path = \"path/to/your/audio.wav\"\n    result = await run_absa(audio_path)\n\n    print(f\"Transcription: {result.text}\")\n    print(f\"Overall Sentiment: {result.polarity}\")\n    print(f\"Confidence Score: {result.score}\")\n\nasyncio.run(main())\n</code></pre>"},{"location":"getting-started/quick-start/#supported-formats","title":"Supported Formats","text":""},{"location":"getting-started/quick-start/#text-input","title":"Text Input","text":"<ul> <li>Direct text string</li> <li>Text in any language</li> </ul>"},{"location":"getting-started/quick-start/#audio-files","title":"Audio Files","text":"<ul> <li><code>.wav</code> - WAV format</li> <li><code>.mp3</code> - MP3 format</li> <li><code>.m4a</code> - M4A format</li> <li><code>.flac</code> - FLAC format</li> </ul>"},{"location":"getting-started/quick-start/#example-output","title":"Example Output","text":"<pre><code>{\n  \"id\": \"123e4567-e89b-12d3-a456-426614174000\",\n  \"polarity\": \"neutral\",\n  \"score\": 0.5,\n  \"aspects\": [\n    {\n      \"aspect\": \"camera\",\n      \"sentiment\": \"positive\",\n      \"score\": 0.95,\n      \"quote\": \"the camera is great\"\n    },\n    {\n      \"aspect\": \"battery\",\n      \"sentiment\": \"negative\",\n      \"score\": 0.98,\n      \"quote\": \"its battery is very bad\"\n    }\n  ],\n  \"message\": \"ABSA completed successfully.\",\n  \"text\": \"This phone's camera is great, but its battery is very bad.\"\n}\n</code></pre>"},{"location":"getting-started/quick-start/#sentiment-types","title":"Sentiment Types","text":""},{"location":"getting-started/quick-start/#polarity-overall-sentiment","title":"Polarity (Overall Sentiment)","text":"<ul> <li><code>positive</code>: Positive sentiment</li> <li><code>negative</code>: Negative sentiment</li> <li><code>neutral</code>: Neutral sentiment</li> </ul>"},{"location":"getting-started/quick-start/#sentiment-aspect-sentiment","title":"Sentiment (Aspect Sentiment)","text":"<ul> <li><code>positive</code>: Positive</li> <li><code>negative</code>: Negative</li> <li><code>neutral</code>: Neutral</li> </ul>"},{"location":"getting-started/quick-start/#confidence-scores","title":"Confidence Scores","text":"<p>Scores range from 0.0 to 1.0:</p> <ul> <li>0.0 - 0.3: Low confidence</li> <li>0.3 - 0.7: Medium confidence</li> <li>0.7 - 1.0: High confidence</li> </ul>"},{"location":"getting-started/quick-start/#quick-test","title":"Quick Test","text":"<p>Run a quick test using the provided test data:</p> <pre><code>python main.py\n</code></pre> <p>This command analyzes the sample texts in the <code>test_data/text/test_texts.jsonl</code> file.</p>"},{"location":"getting-started/quick-start/#advanced-usage","title":"Advanced Usage","text":""},{"location":"getting-started/quick-start/#specifying-a-custom-language","title":"Specifying a Custom Language","text":"<p>Although language detection is handled automatically by integrated modules, you can specify the desired language input as shown below.</p> <pre><code>from app.tools.absa_analyzer import absa_analyzer_tool\n\nresult = absa_analyzer_tool.invoke({\n    \"text\": \"This product is truly great!\",\n    \"language\": \"tr\"\n})\n\nresult = absa_analyzer_tool.invoke({\n    \"text\": \"This product is amazing!\",\n    \"language\": \"en\"\n})\n</code></pre>"},{"location":"getting-started/quick-start/#batch-analysis","title":"Batch Analysis","text":"<pre><code>import asyncio\nfrom app.agents.absa_agent import run_absa\n\nasync def analyze_multiple_texts(texts):\n    results = []\n    for text in texts:\n        result = await run_absa(text)\n        results.append(result)\n    return results\n\ntexts = [\n    \"This phone is great!\",\n    \"The camera quality is bad.\",\n    \"The price is reasonable, but the performance is inadequate.\"\n]\n\nresults = asyncio.run(analyze_multiple_texts(texts))\n</code></pre>"},{"location":"getting-started/quick-start/#troubleshooting","title":"Troubleshooting","text":""},{"location":"getting-started/quick-start/#common-errors","title":"Common Errors","text":"<ol> <li>API Key Error: Check your Google API key in the <code>.env</code> file.</li> <li>Empty Text: The text to be analyzed cannot be empty.</li> <li>Unsupported Format: Check the audio file format.</li> </ol>"},{"location":"getting-started/quick-start/#performance-tips","title":"Performance Tips","text":"<ol> <li>Batch Processing: Process multiple texts at once.</li> <li>Caching: Cache the results.</li> <li>Asynchronous Usage: Use <code>async/await</code>.</li> </ol>"},{"location":"getting-started/quick-start/#next-steps","title":"Next Steps","text":"<ul> <li>Architecture - Learn about the system architecture</li> <li>Development - Read the development guide</li> <li>Deployment - Learn about infrastructure requirements for deployment</li> <li>API Reference - Learn about the API endpoints</li> </ul>"},{"location":"tr/","title":"Aspectify","text":"<p>Aspect-Based Sentiment Analysis (ABSA) Uygulamas\u0131</p> <p>Aspectify, Google'\u0131n Gemini AI modellerini kullanarak metin ve ses i\u00e7eri\u011fi \u00fczerinde y\u00f6nelim (aspect) tabanl\u0131 duygu analizi ger\u00e7ekle\u015ftiren bir uygulamad\u0131r. Ayn\u0131 metin i\u00e7indeki farkl\u0131 aspect'ler i\u00e7in duygu analizi yaparak kullan\u0131c\u0131 g\u00f6r\u00fc\u015fleri hakk\u0131nda detayl\u0131 i\u00e7g\u00f6r\u00fcler sa\u011flar.</p>"},{"location":"tr/#ozellikler","title":"\u00d6zellikler","text":"<ul> <li>\ud83c\udfaf Aspect Tabanl\u0131 Analiz: Metin i\u00e7indeki aspect'leri tespit ederek her bir aspect i\u00e7in duygu analizi yapar.</li> <li>\ud83c\udfa4 Ses Deste\u011fi: Ses dosyalar\u0131n\u0131 de\u015fifre ederek analiz s\u00fcrecine dahil eder.</li> <li>\ud83c\udf0d \u00c7ok Dilli Destek: \u0130\u00e7erik dili dinamik olarak belirler ve birden fazla dili destekler.</li> <li>\ud83e\udd16 AI Destekli: Duygu analizi i\u00e7in Google Gemini modellerini kullan\u0131r.</li> <li>\ud83d\udcca Detayl\u0131 Sonu\u00e7lar: Polarite, g\u00fcven skorlar\u0131, aspect'ler ve referans gibi detayl\u0131 \u00e7\u0131kt\u0131 sa\u011flar</li> <li>\ud83d\udcdd Loglama: Hata ay\u0131klama ve izleme i\u00e7in uygulama loglamas\u0131 yapar</li> </ul>"},{"location":"tr/#hzl-baslangc","title":"H\u0131zl\u0131 Ba\u015flang\u0131\u00e7","text":"<pre><code>from app.agents.absa_agent import run_absa\n\ntext = \"Kamera harika ama batarya \u00f6mr\u00fc k\u00f6t\u00fc.\"\n\nresult = await run_absa(text)\nprint(f\"Genel duygu: {result.polarity}\")\nprint(f\"G\u00fcven: {result.score}\")\nfor aspect in result.aspects:\n    print(f\"{aspect.aspect}: {aspect.sentiment} ({aspect.score})\")\n</code></pre>"},{"location":"tr/#mimari","title":"Mimari","text":"<p>Aspectify mod\u00fcler bir mimariyi takip eder: - agents: Analiz i\u015f ak\u0131\u015flar\u0131 sa\u011flan\u0131r ve ajan yap\u0131s\u0131 y\u00f6netilir. - ai_models: Google Gemini ve OpenAI Whisper modelleri entegrasyonlar\u0131 tan\u0131mlan\u0131r. - tools: \u00d6zelle\u015fmi\u015f analiz ara\u00e7lar\u0131 ve yard\u0131mc\u0131 programlar sa\u011flan\u0131r. - logic: \u0130\u00e7erik i\u015fleme i\u00e7in temel i\u015f mant\u0131\u011f\u0131 geli\u015ftirilir. - schemas: Veri modelleri tan\u0131mlan\u0131r. - core: Yap\u0131land\u0131rma ve loglama altyap\u0131s\u0131 olu\u015fturulur.</p>"},{"location":"tr/#baslangc","title":"Ba\u015flang\u0131\u00e7","text":"<ol> <li>Kurulum - Geli\u015ftirme ortam\u0131n\u0131 kurun</li> <li>Yap\u0131land\u0131rma - Ayarlar\u0131 yap\u0131land\u0131r\u0131n</li> <li>H\u0131zl\u0131 Ba\u015flang\u0131\u00e7 - \u0130lk analizinizi \u00e7al\u0131\u015ft\u0131r\u0131n</li> </ol>"},{"location":"tr/#dokumantasyon","title":"Dok\u00fcmantasyon","text":"<ol> <li> <p>Mimari (Architecture): Bu b\u00f6l\u00fcm, sistemin tasar\u0131m temellerini ve genel yap\u0131s\u0131n\u0131 ele al\u0131r. Sistemin ana bile\u015fenlerini ve bu mod\u00fcllerin birbiriyle olan etkile\u015fimlerini detayland\u0131r\u0131r. Projede kullan\u0131lan programlama dilleri, framework'ler ve veritabanlar\u0131n\u0131 i\u00e7eren teknoloji y\u0131\u011f\u0131n\u0131 hakk\u0131nda bilgi verir. Ayr\u0131ca, ana klas\u00f6r yap\u0131s\u0131n\u0131 ve her bir mod\u00fcl\u00fcn \u00fcstlendi\u011fi sorumluluklar\u0131 a\u00e7\u0131klayarak, bir API iste\u011finin sistem i\u00e7indeki ya\u015fam d\u00f6ng\u00fcs\u00fcn\u00fc ve nas\u0131l i\u015flendi\u011fini ortaya koyar.</p> </li> <li> <p>Geli\u015ftirme K\u0131lavuzu (Development): Proje koduna katk\u0131da bulunmay\u0131 ama\u00e7layan bu k\u0131lavuz, geli\u015ftirme s\u00fcrecinin tamam\u0131n\u0131 kapsar. Bir geli\u015ftiricinin kendi bilgisayar\u0131nda \u00e7al\u0131\u015fabilmesi i\u00e7in yerel ortam\u0131n nas\u0131l kurulaca\u011f\u0131n\u0131 ad\u0131m ad\u0131m anlat\u0131r. Proje genelinde kod tutarl\u0131l\u0131\u011f\u0131n\u0131 sa\u011flamak amac\u0131yla takip edilmesi gereken kodlama standartlar\u0131n\u0131 ve linter kurallar\u0131n\u0131 tan\u0131mlar. Son olarak, yaz\u0131lan kodun kalitesini ve do\u011frulu\u011funu sa\u011flamak i\u00e7in testlerin nas\u0131l haz\u0131rlanaca\u011f\u0131n\u0131 ve \u00e7al\u0131\u015ft\u0131r\u0131laca\u011f\u0131n\u0131 g\u00f6sterir.</p> </li> <li> <p>Da\u011f\u0131t\u0131m K\u0131lavuzu (Deployment): Bu k\u0131lavuz, uygulaman\u0131n son kullan\u0131c\u0131ya hizmet verece\u011fi canl\u0131 bir \u00fcretim ortam\u0131na kurulmas\u0131 s\u00fcrecine odaklanmaktad\u0131r. Uygulaman\u0131n sorunsuz \u00e7al\u0131\u015fmas\u0131 i\u00e7in gereken sunucu, veritaban\u0131 ve di\u011fer altyap\u0131 servislerinin gereksinimlerini belirtir. \u00dcretim ortam\u0131na \u00f6zel yap\u0131land\u0131rma ad\u0131mlar\u0131n\u0131 ve ortam de\u011fi\u015fkenlerinin (environment variables) nas\u0131l ayarlanaca\u011f\u0131n\u0131 tarif eder. Ayr\u0131ca, sistemin \u00e7al\u0131\u015fma s\u0131ras\u0131nda \u00fcretti\u011fi olaylar\u0131n ve olas\u0131 hatalar\u0131n takibi i\u00e7in loglama mekanizmas\u0131n\u0131n nas\u0131l yap\u0131land\u0131r\u0131ld\u0131\u011f\u0131n\u0131 a\u00e7\u0131klar.</p> </li> <li> <p>API Referans\u0131 (API Reference): Uygulaman\u0131n d\u0131\u015f d\u00fcnya ile nas\u0131l ileti\u015fim kurdu\u011funu tan\u0131mlayan bu teknik referans, API'nin kullan\u0131m\u0131n\u0131 detayland\u0131r\u0131r. GET /agents ve POST /tasks gibi mevcut t\u00fcm API u\u00e7 noktalar\u0131n\u0131 (endpoints) ve bu u\u00e7 noktalar\u0131n i\u015flevlerini i\u00e7erir. API ile veri al\u0131\u015fveri\u015finde kullan\u0131lan istek (request) ve yan\u0131t (response) g\u00f6vdelerinin yap\u0131s\u0131n\u0131 tan\u0131mlayan veri modellerini (schemas) sunar. (Not: Bu b\u00f6l\u00fcm haz\u0131rl\u0131k a\u015famas\u0131ndad\u0131r.)</p> </li> </ol>"},{"location":"tr/#ornek-ckt","title":"\u00d6rnek \u00c7\u0131kt\u0131","text":"<pre><code>{\n  \"id\": \"uuid-burada\",\n  \"polarity\": \"neutral\",\n  \"score\": 0.5,\n  \"aspects\": [\n    {\n      \"aspect\": \"kamera\",\n      \"sentiment\": \"positive\",\n      \"score\": 0.95,\n      \"quote\": \"kamera harika\"\n    },\n    {\n      \"aspect\": \"batarya\",\n      \"sentiment\": \"negative\", \n      \"score\": 0.98,\n      \"quote\": \"batarya \u00f6mr\u00fc k\u00f6t\u00fc\"\n    }\n  ],\n  \"message\": \"ABSA ba\u015far\u0131yla tamamland\u0131.\",\n  \"text\": \"Kamera harika ama batarya \u00f6mr\u00fc k\u00f6t\u00fc.\"\n}\n</code></pre>"},{"location":"tr/#destek","title":"Destek","text":"<p>Sorular, sorunlar veya katk\u0131lar i\u00e7in l\u00fctfen GitHub deposunu ziyaret edin. Linkedin veya E-mail \u00fczerinden do\u011frudan ileti\u015fime ge\u00e7ebilirsiniz.</p>"},{"location":"tr/api/endpoints/","title":"API U\u00e7 Noktalar\u0131 (Endpoints)","text":"<p>Bu belge, Aspectify API'sinin sunaca\u011f\u0131 planlanan RESTful u\u00e7 noktalar\u0131n\u0131 tan\u0131mlar.</p> <p>\u26a0\ufe0f Mevcut Durum: Bu API hen\u00fcz geli\u015ftirme a\u015famas\u0131ndad\u0131r ve bu u\u00e7 noktalar aktif de\u011fildir. Bu dok\u00fcman, projenin API vizyonunu ve gelecekteki aray\u00fcz\u00fcn\u00fc tan\u0131mlamak i\u00e7in bir yol haritas\u0131 niteli\u011findedir.</p>"},{"location":"tr/api/endpoints/#planlanan-uc-noktalar","title":"Planlanan U\u00e7 Noktalar","text":""},{"location":"tr/api/endpoints/#analiz-baslatma","title":"Analiz Ba\u015flatma","text":"<ul> <li>Endpoint: <code>POST /analyze</code></li> <li>A\u00e7\u0131klama: Yeni bir metin veya ses analizi g\u00f6revi ba\u015flat\u0131r. Bu, sistemin ana i\u015flevsel u\u00e7 noktas\u0131d\u0131r.</li> <li>Request Body: <code>MultiModalRequest</code> \u015femas\u0131na uygun bir JSON nesnesi bekler.</li> <li>Ba\u015far\u0131l\u0131 Yan\u0131t (200 OK): <code>ABSAResponse</code> \u015femas\u0131na uygun bir JSON nesnesi d\u00f6nd\u00fcr\u00fcr.</li> </ul> <p>\u00d6rnek \u0130stek (<code>curl</code>):<code>bash curl -X POST \"http://localhost:8000/analyze\" \\ -H \"Content-Type: application/json\" \\ -d '{   \"content\": \"Servis \u00e7ok h\u0131zl\u0131yd\u0131 ama yemekler so\u011fuktu.\",   \"content_type\": \"text\" }'</code></p>"},{"location":"tr/api/endpoints/#gorev-durumunu-sorgulama-gelecek-icin","title":"G\u00f6rev Durumunu Sorgulama (Gelecek i\u00e7in)","text":"<ul> <li>Endpoint: <code>GET /tasks/{task_id}</code></li> <li>A\u00e7\u0131klama: \u00d6zellikle b\u00fcy\u00fck ses dosyalar\u0131 gibi uzun s\u00fcrebilecek asenkron analiz g\u00f6revlerinin durumunu sorgulamak i\u00e7in planlanm\u0131\u015ft\u0131r.</li> <li>Request Body: Yok.</li> <li>Ba\u015far\u0131l\u0131 Yan\u0131t (200 OK): G\u00f6revin durumunu ('PENDING', 'SUCCESS', 'FAILED') ve ba\u015far\u0131l\u0131ysa analiz sonucunu i\u00e7eren bir JSON nesnesi d\u00f6nd\u00fcr\u00fcr.</li> </ul>"},{"location":"tr/api/schemas/","title":"Yan\u0131t Modelleri","text":"<p>Aspectify API'si, yap\u0131land\u0131r\u0131lm\u0131\u015f ve tip g\u00fcvenli yan\u0131t modelleri kullan\u0131r.</p>"},{"location":"tr/api/schemas/#genel-baks","title":"Genel Bak\u0131\u015f","text":"<p>T\u00fcm API yan\u0131tlar\u0131 Pydantic modelleri kullanarak do\u011frulan\u0131r ve serile\u015ftirilir. Bu, tip g\u00fcvenli\u011fi, otomatik do\u011frulama ve API dok\u00fcmantasyonu sa\u011flar.</p>"},{"location":"tr/api/schemas/#ana-yant-modelleri","title":"Ana Yan\u0131t Modelleri","text":""},{"location":"tr/api/schemas/#absaresponse","title":"ABSAResponse","text":"<p>Ana duygu analizi yan\u0131t modeli.</p> <pre><code>class ABSAResponse(BaseModel):\n    id: str\n    polarity: str\n    score: float\n    aspects: List[AspectAnalysisResponse]\n    message: str\n    text: str\n</code></pre>"},{"location":"tr/api/schemas/#alanlar","title":"Alanlar","text":"Alan Tip A\u00e7\u0131klama <code>id</code> <code>str</code> Benzersiz analiz ID'si (UUID) <code>polarity</code> <code>str</code> Genel duygu (positive/negative/neutral) <code>score</code> <code>float</code> G\u00fcven skoru (0.0-1.0) <code>aspects</code> <code>List[AspectAnalysisResponse]</code> Aspect analizleri listesi <code>message</code> <code>str</code> \u0130\u015flem durumu mesaj\u0131 <code>text</code> <code>str</code> Analiz edilen metin"},{"location":"tr/api/schemas/#ornek","title":"\u00d6rnek","text":"<pre><code>{\n  \"id\": \"123e4567-e89b-12d3-a456-426614174000\",\n  \"polarity\": \"neutral\",\n  \"score\": 0.5,\n  \"aspects\": [\n    {\n      \"aspect\": \"kamera\",\n      \"sentiment\": \"positive\",\n      \"score\": 0.95,\n      \"quote\": \"kamera harika\"\n    }\n  ],\n  \"message\": \"ABSA completed successfully.\",\n  \"text\": \"Bu telefonun kameras\u0131 harika.\"\n}\n</code></pre>"},{"location":"tr/api/schemas/#aspectanalysisresponse","title":"AspectAnalysisResponse","text":"<p>Aspect analizi yan\u0131t modeli.</p> <pre><code>class AspectAnalysisResponse(BaseModel):\n    aspect: str\n    sentiment: str\n    score: float\n    quote: str\n</code></pre>"},{"location":"tr/api/schemas/#alanlar_1","title":"Alanlar","text":"Alan Tip A\u00e7\u0131klama <code>aspect</code> <code>str</code> Aspect ad\u0131 (\u00f6rn: \"kamera\", \"batarya\") <code>sentiment</code> <code>str</code> Aspect duygusu (positive/negative/neutral) <code>score</code> <code>float</code> G\u00fcven skoru (0.0-1.0) <code>quote</code> <code>str</code> Metinden ilgili al\u0131nt\u0131"},{"location":"tr/api/schemas/#ornek_1","title":"\u00d6rnek","text":"<pre><code>{\n  \"aspect\": \"kamera\",\n  \"sentiment\": \"positive\",\n  \"score\": 0.95,\n  \"quote\": \"kamera harika foto\u011fraflar \u00e7ekiyor\"\n}\n</code></pre>"},{"location":"tr/api/schemas/#llmresponse","title":"LLMResponse","text":"<p>LLM model yan\u0131t modeli.</p> <pre><code>class LLMResponse(BaseModel):\n    polarity: str\n    score: float\n    aspects: List[AspectAnalysisResponse]\n</code></pre>"},{"location":"tr/api/schemas/#alanlar_2","title":"Alanlar","text":"Alan Tip A\u00e7\u0131klama <code>polarity</code> <code>str</code> Genel duygu (positive/negative/neutral) <code>score</code> <code>float</code> G\u00fcven skoru (0.0-1.0) <code>aspects</code> <code>List[AspectAnalysisResponse]</code> Aspekt analizleri listesi"},{"location":"tr/api/schemas/#ornek_2","title":"\u00d6rnek","text":"<pre><code>{\n  \"polarity\": \"positive\",\n  \"score\": 0.8,\n  \"aspects\": [\n    {\n      \"aspect\": \"kalite\",\n      \"sentiment\": \"positive\",\n      \"score\": 0.9,\n      \"quote\": \"kalite \u00e7ok iyi\"\n    }\n  ]\n}\n</code></pre>"},{"location":"tr/api/schemas/#istek-modelleri","title":"\u0130stek Modelleri","text":""},{"location":"tr/api/schemas/#multimodalrequest","title":"MultiModalRequest","text":"<p>\u00c7oklu modal istek modeli.</p> <pre><code>class MultiModalRequest(BaseModel):\n    data: str\n    language: Optional[str] = None\n</code></pre>"},{"location":"tr/api/schemas/#alanlar_3","title":"Alanlar","text":"Alan Tip A\u00e7\u0131klama <code>data</code> <code>str</code> Analiz edilecek metin veya dosya yolu <code>language</code> <code>Optional[str]</code> \u0130ste\u011fe ba\u011fl\u0131 dil kodu"},{"location":"tr/api/schemas/#ornek_3","title":"\u00d6rnek","text":"<pre><code>{\n  \"data\": \"Bu \u00fcr\u00fcn ger\u00e7ekten harika!\",\n  \"language\": \"tr\"\n}\n</code></pre>"},{"location":"tr/api/schemas/#veri-turleri","title":"Veri T\u00fcrleri","text":""},{"location":"tr/api/schemas/#duygu-turleri","title":"Duygu T\u00fcrleri","text":"<pre><code>from typing import Literal\n\nPolarityType = Literal[\"positive\", \"negative\", \"neutral\"]\nSentimentType = Literal[\"positive\", \"negative\", \"neutral\"]\n</code></pre> <p>De\u011ferler: - <code>positive</code>: Pozitif duygu - <code>negative</code>: Negatif duygu - <code>neutral</code>: N\u00f6tr duygu</p>"},{"location":"tr/api/schemas/#icerik-turleri","title":"\u0130\u00e7erik T\u00fcrleri","text":"<pre><code>from typing import Literal\n\nContentType = Literal[\"text\", \"audio_path\"]\n</code></pre> <p>De\u011ferler: - <code>text</code>: D\u00fcz metin - <code>audio_path</code>: Ses dosyas\u0131 yolu</p>"},{"location":"tr/api/schemas/#dogrulama-kurallar","title":"Do\u011frulama Kurallar\u0131","text":""},{"location":"tr/api/schemas/#absaresponse-dogrulama","title":"ABSAResponse Do\u011frulama","text":"<pre><code>class ABSAResponse(BaseModel):\n    id: str = Field(..., description=\"Benzersiz analiz ID'si\")\n    polarity: str = Field(..., regex=\"^(positive|negative|neutral)$\")\n    score: float = Field(..., ge=0.0, le=1.0, description=\"G\u00fcven skoru\")\n    aspects: List[AspectAnalysisResponse] = Field(..., min_items=0)\n    message: str = Field(..., min_length=1)\n    text: str = Field(..., min_length=1)\n</code></pre>"},{"location":"tr/api/schemas/#aspectanalysisresponse-dogrulama","title":"AspectAnalysisResponse Do\u011frulama","text":"<pre><code>class AspectAnalysisResponse(BaseModel):\n    aspect: str = Field(..., min_length=1, description=\"Aspekt ad\u0131\")\n    sentiment: str = Field(..., regex=\"^(positive|negative|neutral)$\")\n    score: float = Field(..., ge=0.0, le=1.0, description=\"G\u00fcven skoru\")\n    quote: str = Field(..., min_length=1, description=\"Metinden al\u0131nt\u0131\")\n</code></pre>"},{"location":"tr/api/schemas/#serilestirme","title":"Serile\u015ftirme","text":""},{"location":"tr/api/schemas/#json-serilestirme","title":"JSON Serile\u015ftirme","text":"<pre><code># Model'i JSON'a \u00e7evir\nresponse = ABSAResponse(...)\njson_data = response.model_dump()\n\n# JSON'dan model olu\u015ftur\njson_str = '{\"id\": \"123\", \"polarity\": \"positive\", ...}'\nresponse = ABSAResponse.model_validate_json(json_str)\n</code></pre>"},{"location":"tr/api/schemas/#dict-serilestirme","title":"Dict Serile\u015ftirme","text":"<pre><code># Model'i dict'e \u00e7evir\nresponse = ABSAResponse(...)\ndict_data = response.model_dump()\n\n# Dict'den model olu\u015ftur\ndict_data = {\"id\": \"123\", \"polarity\": \"positive\", ...}\nresponse = ABSAResponse.model_validate(dict_data)\n</code></pre>"},{"location":"tr/architecture/overview/","title":"Sistem Mimarisi","text":"<p>Aspectify, modern Python mimarisi kullanarak geli\u015ftirilmi\u015f bir duygu analizi platformudur.</p>"},{"location":"tr/architecture/overview/#genel-mimari","title":"Genel Mimari","text":"<pre><code>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502                    Aspectify Platform                       \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502  API Layer (FastAPI)                                        \u2502\n\u2502  \u251c\u2500\u2500 Endpoints &amp; Authentication                             \u2502\n\u2502  \u2514\u2500\u2500 Request/Response Models                                \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502  Core Logic &amp; Services Layer                                \u2502\n\u2502  \u251c\u2500\u2500 Agents (Orchestration &amp; Business Rules)                \u2502\n\u2502  \u251c\u2500\u2500 Business Services (e.g., AnalysisService)              \u2502\n\u2502  \u2514\u2500\u2500 AI/ML Services (Internal Wrappers)                     \u2502\n\u2502      \u251c\u2500\u2500 LLM Service (Gemini)                               \u2502\n\u2502      \u2514\u2500\u2500 Transcription Service (Whisper)                    \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502  Data Layer                                                 \u2502\n\u2502  \u251c\u2500\u2500 Database (PostgreSQL, Pinecone)                        \u2502\n\u2502  \u2514\u2500\u2500 File Storage                                           \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"tr/architecture/overview/#modul-yaps","title":"Mod\u00fcl Yap\u0131s\u0131","text":""},{"location":"tr/architecture/overview/#core-cekirdek","title":"\ud83c\udfd7\ufe0f Core (\u00c7ekirdek)","text":"<pre><code>app/core/\n\u251c\u2500\u2500 config.py          # Yap\u0131land\u0131rma y\u00f6netimi\n\u2514\u2500\u2500 logging_config.py  # Loglama yap\u0131land\u0131rmas\u0131\n</code></pre> <p>Sorumluluklar: - Uygulama yap\u0131land\u0131rmas\u0131 - Ortam de\u011fi\u015fkenleri y\u00f6netimi - Loglama sistemi</p>"},{"location":"tr/architecture/overview/#agents-ajanlar","title":"\ud83e\udd16 Agents (Ajanlar)","text":"<pre><code>app/agents/\n\u2514\u2500\u2500 absa_agent.py      # Ana ABSA analiz ajan\u0131\n</code></pre> <p>Sorumluluklar: - \u0130\u015f ak\u0131\u015f\u0131 y\u00f6netimi - Veri i\u015fleme koordinasyonu - Sonu\u00e7 formatlama</p>"},{"location":"tr/architecture/overview/#ai-models-ai-modelleri","title":"\ud83e\udde0 AI Models (AI Modelleri)","text":"<pre><code>app/ai_models/\n\u251c\u2500\u2500 llm_models.py           # LLM model y\u00f6netimi\n\u2514\u2500\u2500 openai_whisper_models.py # Whisper model y\u00f6netimi\n</code></pre> <p>Sorumluluklar: - AI model ba\u011flant\u0131lar\u0131 - Model yap\u0131land\u0131rmas\u0131</p>"},{"location":"tr/architecture/overview/#logic-mantk","title":"\ud83d\udd27 Logic (Mant\u0131k)","text":"<pre><code>app/logic/\n\u251c\u2500\u2500 content_type_identifier.py  # \u0130\u00e7erik t\u00fcr\u00fc belirleme\n\u251c\u2500\u2500 language_detector.py        # Dil tespiti\n\u2514\u2500\u2500 transcriber.py              # Ses transkripsiyonu\n</code></pre> <p>Sorumluluklar: - \u0130\u00e7erik t\u00fcr\u00fc analizi - Dil tespiti - Ses dosyas\u0131 i\u015fleme</p>"},{"location":"tr/architecture/overview/#tools-araclar","title":"\ud83d\udee0\ufe0f Tools (Ara\u00e7lar)","text":"<pre><code>app/tools/\n\u2514\u2500\u2500 absa_analyzer.py    # ABSA analiz arac\u0131\n</code></pre> <p>Sorumluluklar: - Duygu analizi i\u015flemi - Aspect belirleme - Sonu\u00e7 formatlama</p>"},{"location":"tr/architecture/overview/#schemas-semalar","title":"\ud83d\udccb Schemas (\u015eemalar)","text":"<pre><code>app/schemas/\n\u251c\u2500\u2500 request/\n\u2502   \u2514\u2500\u2500 multi_modal_request.py  # \u0130stek modelleri\n\u2514\u2500\u2500 response/\n    \u251c\u2500\u2500 absa_response.py        # ABSA yan\u0131t modeli\n    \u251c\u2500\u2500 aspect_response.py      # Aspect yan\u0131t modeli\n    \u2514\u2500\u2500 llm_response.py         # LLM yan\u0131t modeli\n</code></pre> <p>Sorumluluklar: - Veri do\u011frulama - API s\u00f6zle\u015fmeleri - Tip g\u00fcvenli\u011fi</p>"},{"location":"tr/architecture/overview/#veri-aks","title":"Veri Ak\u0131\u015f\u0131","text":""},{"location":"tr/architecture/overview/#1-giris-isleme","title":"1. Giri\u015f \u0130\u015fleme","text":"<pre><code>Kullan\u0131c\u0131 Giri\u015fi \u2192 \u0130\u00e7erik T\u00fcr\u00fc Belirleme \u2192 Dil Tespiti\n</code></pre>"},{"location":"tr/architecture/overview/#2-icerik-hazrlama","title":"2. \u0130\u00e7erik Haz\u0131rlama","text":"<pre><code>Ses Dosyas\u0131 \u2192 Transkripsiyon \u2192 Metin\nMetin \u2192 Do\u011frudan \u0130\u015fleme\n</code></pre>"},{"location":"tr/architecture/overview/#3-analiz-sureci","title":"3. Analiz S\u00fcreci","text":"<pre><code>Metin \u2192 ABSA Arac\u0131 \u2192 LLM Model \u2192 Sonu\u00e7\n</code></pre>"},{"location":"tr/architecture/overview/#4-sonuc-formatlama","title":"4. Sonu\u00e7 Formatlama","text":"<pre><code>Ham Sonu\u00e7 \u2192 Pydantic Model \u2192 JSON Yan\u0131t\n</code></pre>"},{"location":"tr/architecture/overview/#teknoloji-ygn","title":"Teknoloji Y\u0131\u011f\u0131n\u0131","text":""},{"location":"tr/architecture/overview/#backend","title":"Backend","text":"<ul> <li>Python 3.10: Ana programlama dili</li> <li>FastAPI: Web framework</li> <li>Pydantic: Veri do\u011frulama</li> </ul>"},{"location":"tr/architecture/overview/#aiml","title":"AI/ML","text":"<ul> <li>Google Gemini: LLM modeli</li> <li>OpenAI Whisper: Ses transkripsiyonu</li> <li>LangChain: AI framework</li> </ul>"},{"location":"tr/architecture/overview/#altyap","title":"Altyap\u0131","text":"<ul> <li>Docker: Konteynerle\u015ftirme</li> <li>MkDocs: Dok\u00fcmantasyon</li> <li>GitHub Pages: Dok\u00fcmantasyon hosting</li> </ul>"},{"location":"tr/architecture/overview/#gelecek-planlar","title":"Gelecek Planlar\u0131","text":""},{"location":"tr/architecture/overview/#ksa-vadeli","title":"K\u0131sa Vadeli","text":"<ul> <li> API endpointleri ve do\u011frulama</li> <li> Uygulama ak\u0131\u015f\u0131ndan ba\u011f\u0131ms\u0131z dil belirleme</li> <li> \u00d6nbellekleme ad\u0131m\u0131</li> <li> Analiz \u00f6ncesi metin \u00f6n i\u015fleme</li> <li> Web aray\u00fcz\u00fc</li> <li> Yap\u0131sal ve vekt\u00f6r veri taban\u0131 ayarlar\u0131</li> <li> Logging ayarlar\u0131</li> </ul>"},{"location":"tr/architecture/overview/#uzun-vadeli","title":"Uzun Vadeli","text":"<ul> <li> Geli\u015fmi\u015f prompt yap\u0131s\u0131n\u0131 ile g\u00f6rev s\u0131n\u0131rland\u0131rma</li> <li> \u0130leri seviye analizleme</li> <li> G\u00f6rsel analiz</li> <li> Backend ekleme</li> </ul>"},{"location":"tr/architecture/request-lifecycle/","title":"\u0130stek Ya\u015fam D\u00f6ng\u00fcs\u00fc ve Veri Ak\u0131\u015f\u0131","text":"<p>Bu belge, bir kullan\u0131c\u0131n\u0131n Aspectify API'sine bir istek g\u00f6nderdi\u011fi andan, i\u015flenmi\u015f yan\u0131t\u0131 ald\u0131\u011f\u0131 ana kadar ge\u00e7en s\u00fcreci ve verinin sistem i\u00e7indeki yolculu\u011funu a\u00e7\u0131klar.</p>"},{"location":"tr/architecture/request-lifecycle/#yuksek-seviye-aks","title":"Y\u00fcksek Seviye Ak\u0131\u015f","text":"<p>Sistemdeki veri ak\u0131\u015f\u0131, mant\u0131ksal katmanlar aras\u0131nda ger\u00e7ekle\u015fir:</p> <ol> <li>API Katman\u0131: Kullan\u0131c\u0131dan gelen istek al\u0131n\u0131r, kimlik do\u011frulamas\u0131 yap\u0131l\u0131r ve Pydantic modelleri ile do\u011frulan\u0131r.</li> <li>\u00c7ekirdek Mant\u0131k &amp; Servisler Katman\u0131: Do\u011frulanan veri, i\u015flenmek \u00fczere Ajanlara (Agents) ve servislere y\u00f6nlendirilir. Analiz ve di\u011fer t\u00fcm i\u015flemler bu katmanda ger\u00e7ekle\u015fir.</li> <li>Veri Katman\u0131: \u0130\u015flem s\u0131ras\u0131nda gerekli olan verilere eri\u015filir.</li> <li>API Katman\u0131: \u0130\u015flem sonucu elde edilen veri, Pydantic modelleri kullan\u0131larak formatlan\u0131r ve standart bir JSON yan\u0131t\u0131 olarak kullan\u0131c\u0131ya d\u00f6nd\u00fcr\u00fcl\u00fcr.</li> </ol>"},{"location":"tr/architecture/request-lifecycle/#detayl-islem-admlar","title":"Detayl\u0131 \u0130\u015flem Ad\u0131mlar\u0131","text":"<p>\u00c7ekirdek Mant\u0131k katman\u0131ndaki analiz s\u00fcreci be\u015f ana ad\u0131mdan olu\u015fur:</p>"},{"location":"tr/architecture/request-lifecycle/#1-giris-isleme-input-processing","title":"1. Giri\u015f \u0130\u015fleme (Input Processing)","text":"<p>Sisteme gelen her istek ilk olarak i\u00e7eri\u011fin t\u00fcr\u00fcn\u00fc (<code>metin</code>, <code>ses dosyas\u0131</code> vb.) belirleyen bir ad\u0131mdan ge\u00e7er. Ard\u0131ndan, i\u00e7eri\u011fin dili tespit edilerek sonraki ad\u0131mlara haz\u0131rl\u0131k yap\u0131l\u0131r.</p> <pre><code>Kullan\u0131c\u0131 Giri\u015fi \u2192 \u0130\u00e7erik T\u00fcr\u00fc Belirleme \u2192 Dil Tespiti\n</code></pre>"},{"location":"tr/architecture/request-lifecycle/#2-icerik-hazrlama-content-preparation","title":"2. \u0130\u00e7erik Haz\u0131rlama (Content Preparation)","text":"<p>E\u011fer gelen i\u00e7erik bir ses dosyas\u0131 ise, <code>Whisper</code> modeli kullan\u0131larak metne d\u00f6n\u00fc\u015ft\u00fcr\u00fcl\u00fcr (transkripsiyon). Gelen i\u00e7erik zaten metin format\u0131ndaysa, bu ad\u0131m atlanarak dil tespiti ad\u0131m\u0131na ge\u00e7ilir.</p> <p><pre><code>Ses Dosyas\u0131 \u2192 Transkripsiyon \u2192 Metin \u2192 Dil Tespiti\n</code></pre> <pre><code>Metin \u2192 Dil Tespiti\n</code></pre></p>"},{"location":"tr/architecture/request-lifecycle/#3-dil-tespiti-language-detection","title":"3. Dil Tespiti (Language Detection)","text":"<p>\u0130\u015flenmek \u00fczere haz\u0131rlanan metin, Aspect-Based Sentiment Analysis (ABSA) arac\u0131na g\u00f6nderilirmeden \u00f6nce dilin i\u00e7eri\u011fi tespit edilir. Tespit edilen dile g\u00f6re uygun dilde cevap d\u00f6nd\u00fcr\u00fcl\u00fcr.</p>"},{"location":"tr/architecture/request-lifecycle/#4-analiz-sureci-analysis-process","title":"4. Analiz S\u00fcreci (Analysis Process)","text":"<p>Haz\u0131rlanan metin ve edinilen dil bilgisi, Aspect-Based Sentiment Analysis (ABSA) arac\u0131na g\u00f6nderilir. Bu ara\u00e7, analiz i\u015flemini ger\u00e7ekle\u015ftirmek i\u00e7in <code>Gemini</code> LLM modelini kullanarak metindeki duygu ve aspect'leri \u00e7\u0131kar\u0131r ve ham bir sonu\u00e7 \u00fcretir.</p> <pre><code>Metin \u2192 ABSA Arac\u0131 \u2192 LLM Model \u2192 Sonu\u00e7\n</code></pre>"},{"location":"tr/architecture/request-lifecycle/#5-sonuc-formatlama-result-formatting","title":"5. Sonu\u00e7 Formatlama (Result Formatting)","text":"<p>Analiz s\u00fcrecinden elde edilen ham sonu\u00e7, \u00f6nceden tan\u0131mlanm\u0131\u015f Pydantic \u015femalar\u0131 (<code>schemas</code>) kullan\u0131larak yap\u0131land\u0131r\u0131lm\u0131\u015f ve tutarl\u0131 bir formata d\u00f6n\u00fc\u015ft\u00fcr\u00fcl\u00fcr. Son olarak, bu yap\u0131 API arac\u0131l\u0131\u011f\u0131yla standart bir JSON yan\u0131t\u0131 olarak kullan\u0131c\u0131ya sunulur.</p> <pre><code>Ham Sonu\u00e7 \u2192 Pydantic Model \u2192 JSON Yan\u0131t\n</code></pre>"},{"location":"tr/architecture/tech-stack/","title":"Teknoloji","text":"<p>Aspectify projesinde kullan\u0131lan ana bile\u015fenler, sorumluluk alanlar\u0131na g\u00f6re a\u015fa\u011f\u0131da listelenmi\u015ftir.</p>"},{"location":"tr/architecture/tech-stack/#app","title":"App","text":"<ul> <li>Python 3.10: Projenin ana programlama dilidir. Modern s\u00f6zdizimi ve zengin k\u00fct\u00fcphane ekosistemi i\u00e7in tercih edilmi\u015ftir.</li> <li>FastAPI: Y\u00fcksek performansl\u0131 ve modern bir web framework'\u00fcd\u00fcr. Asenkron yap\u0131s\u0131 ve otomatik API dok\u00fcmantasyonu yetenekleri sayesinde kullan\u0131lm\u0131\u015ft\u0131r.</li> <li>Pydantic: Veri do\u011frulama, serile\u015ftirme ve tip g\u00fcvenli\u011fi i\u00e7in kullan\u0131l\u0131r. API katman\u0131nda istek ve yan\u0131t modellerini y\u00f6netir.</li> </ul>"},{"location":"tr/architecture/tech-stack/#aiml","title":"AI/ML","text":"<ul> <li>Google Gemini: Geli\u015fmi\u015f dil anlama ve aspect-based duygu analizi g\u00f6revleri i\u00e7in kullan\u0131lan temel B\u00fcy\u00fck Dil Modelidir (LLM).</li> <li>OpenAI Whisper: Y\u00fcksek do\u011frulukla ses dosyalar\u0131ndan metin transkripsiyonu yapmak i\u00e7in kullan\u0131lan modeldir.</li> <li>LangChain: AI modelleri, ara\u00e7lar ve i\u015f ak\u0131\u015flar\u0131n\u0131 daha kolay y\u00f6netmek ve zincirlemek i\u00e7in kullan\u0131lan bir framework't\u00fcr.</li> </ul>"},{"location":"tr/architecture/tech-stack/#altyap-ve-veritaban","title":"Altyap\u0131 ve Veritaban\u0131","text":"<ul> <li>Docker: Uygulaman\u0131n ve t\u00fcm ba\u011f\u0131ml\u0131l\u0131klar\u0131n\u0131n farkl\u0131 ortamlarda tutarl\u0131 bir \u015fekilde \u00e7al\u0131\u015fmas\u0131n\u0131 sa\u011flamak i\u00e7in konteynerle\u015ftirme amac\u0131yla kullan\u0131l\u0131r.</li> <li>PostgreSQL: Yap\u0131sal verilerin ve ana uygulama verilerinin sakland\u0131\u011f\u0131 ili\u015fkisel veritaban\u0131d\u0131r.</li> <li>Pinecone: Vekt\u00f6r temsillerinin verimli bir \u015fekilde saklanmas\u0131 ve sorgulanmas\u0131 i\u00e7in kullan\u0131lan vekt\u00f6r veritaban\u0131d\u0131r.</li> <li>MkDocs: Proje dok\u00fcmantasyonunu Markdown dosyalar\u0131ndan statik bir web sitesi olarak olu\u015fturmak i\u00e7in kullan\u0131lan ara\u00e7t\u0131r.</li> <li>GitHub Pages: Olu\u015fturulan dok\u00fcmantasyonun yay\u0131nlanmas\u0131 ve bar\u0131nd\u0131r\u0131lmas\u0131 i\u00e7in kullan\u0131l\u0131r.</li> </ul>"},{"location":"tr/deployment/infrastructure/","title":"\u00c7al\u0131\u015fma Ortam\u0131 Gereksinimleri","text":"<p>Bu belge, Aspectify platformunu mevcut haliyle \u00e7al\u0131\u015ft\u0131rmak i\u00e7in gereken ortam\u0131 ve projenin gelecekteki hedefleri i\u00e7in planlanan altyap\u0131y\u0131 tan\u0131mlar.</p>"},{"location":"tr/deployment/infrastructure/#mevcut-durum-temel-gereksinimler","title":"Mevcut Durum: Temel Gereksinimler","text":"<p>Projenin \u015fu anki versiyonunu \u00e7al\u0131\u015ft\u0131rmak i\u00e7in a\u015fa\u011f\u0131daki yaz\u0131l\u0131mlar\u0131n sisteminizde kurulu olmas\u0131 yeterlidir:</p> <ul> <li>Python: <code>3.10</code></li> <li>pip: Python paketlerini y\u00fcklemek i\u00e7in (<code>requirements.txt</code> dosyas\u0131n\u0131 kullan\u0131r).</li> <li>Git: Proje kodunu indirmek i\u00e7in.</li> </ul>"},{"location":"tr/deployment/infrastructure/#harici-bagmllklar","title":"Harici Ba\u011f\u0131ml\u0131l\u0131klar","text":"<p>Uygulaman\u0131n \u00e7ekirdek analiz mant\u0131\u011f\u0131, a\u015fa\u011f\u0131daki harici servislere eri\u015fim i\u00e7in ge\u00e7erli API anahtarlar\u0131na ihtiya\u00e7 duyar. Bu anahtarlar\u0131n <code>.env</code> dosyas\u0131nda yap\u0131land\u0131r\u0131lmas\u0131 zorunludur:</p> <ul> <li>Google Gemini API Anahtar\u0131</li> <li>OpenAI Whisper API Anahtar\u0131</li> </ul>"},{"location":"tr/deployment/infrastructure/#gelecek-planlar-planlanan-altyap","title":"Gelecek Planlar\u0131: Planlanan Altyap\u0131","text":"<p>Projenin yol haritas\u0131, onu daha \u00f6l\u00e7eklenebilir ve sa\u011flam bir servis haline getirmek i\u00e7in a\u015fa\u011f\u0131daki teknolojileri i\u00e7ermektedir. Bu bile\u015fenler eklendik\u00e7e bu dok\u00fcman g\u00fcncellenecektir.</p> <ul> <li>Konteynerle\u015ftirme (Docker): Uygulaman\u0131n ve ba\u011f\u0131ml\u0131l\u0131klar\u0131n\u0131n her ortamda tutarl\u0131 bir \u015fekilde \u00e7al\u0131\u015fmas\u0131n\u0131 sa\u011flamak i\u00e7in Docker ve Docker Compose entegrasyonu planlanmaktad\u0131r.</li> <li>Veri Katman\u0131 (Database): Analiz sonu\u00e7lar\u0131n\u0131 kal\u0131c\u0131 olarak saklamak ve daha karma\u015f\u0131k sorgular yapabilmek i\u00e7in PostgreSQL (yap\u0131sal veri) ve Pinecone (vekt\u00f6r veri) veritabanlar\u0131 eklenecektir.</li> <li>API Katman\u0131 (FastAPI): Uygulaman\u0131n harici servisler taraf\u0131ndan kolayca kullan\u0131labilmesi i\u00e7in bir REST API aray\u00fcz\u00fc FastAPI kullan\u0131larak geli\u015ftirilecektir.</li> </ul>"},{"location":"tr/deployment/logging/","title":"Loglama Sistemi Yap\u0131land\u0131rmas\u0131 ve Y\u00f6netimi","text":""},{"location":"tr/deployment/logging/#genel-baks","title":"Genel Bak\u0131\u015f","text":"<ul> <li>Log Dosyas\u0131: T\u00fcm loglar, uygulama ana dizinindeki <code>logs/app.log</code> dosyas\u0131na yaz\u0131l\u0131r.</li> <li>Yap\u0131land\u0131rma: Log seviyesi ve di\u011fer ayarlar ortam de\u011fi\u015fkenleri (<code>environment variables</code>) ile kontrol edilir.</li> <li>Log D\u00f6nd\u00fcrme (Rotation): Log dosyas\u0131n\u0131n a\u015f\u0131r\u0131 b\u00fcy\u00fcmesini engellemek i\u00e7in, dosya boyutu 10MB'a ula\u015ft\u0131\u011f\u0131nda otomatik olarak d\u00f6nd\u00fcr\u00fcl\u00fcr ve en son 5 dosya saklan\u0131r.</li> </ul>"},{"location":"tr/deployment/logging/#yaplandrma","title":"Yap\u0131land\u0131rma","text":"<p>Log seviyesini kontrol etmek i\u00e7in <code>.env</code> dosyas\u0131nda veya sunucu ortam de\u011fi\u015fkenlerinde a\u015fa\u011f\u0131daki de\u011fi\u015fkeni ayarlay\u0131n.</p> <pre><code># Log seviyesi: DEBUG, INFO, WARNING, ERROR, CRITICAL\n# \u00dcretim ortamlar\u0131 i\u00e7in \u00f6nerilen seviye INFO veya WARNING'dir.\nLOG_LEVEL=INFO\n</code></pre>"},{"location":"tr/deployment/logging/#log-format","title":"Log Format\u0131","text":"<p>T\u00fcm log giri\u015fleri, analizi kolayla\u015ft\u0131rmak i\u00e7in standart bir formatta yaz\u0131l\u0131r:</p> <ul> <li>Format: <code>Zaman Damgas\u0131 - Logger Ad\u0131 - Seviye - Mesaj</code></li> <li>\u00d6rnek: <code>2024-01-15 10:30:45,123 - app.agents.absa_agent - INFO - ABSA analizi ba\u015flat\u0131ld\u0131</code></li> </ul>"},{"location":"tr/deployment/logging/#log-dosyas-yonetimi","title":"Log Dosyas\u0131 Y\u00f6netimi","text":""},{"location":"tr/deployment/logging/#log-dondurme-log-rotation","title":"Log D\u00f6nd\u00fcrme (Log Rotation)","text":"<p>Loglama sistemi, <code>RotatingFileHandler</code> kullanarak log dosyalar\u0131n\u0131 otomatik olarak y\u00f6netir.</p> <ul> <li>Maksimum Dosya Boyutu: <code>10 MB</code></li> <li>Saklanacak Dosya Say\u0131s\u0131: <code>5</code> (app.log, app.log.1, ..., app.log.4)</li> </ul> <p>Bu ayarlar <code>app/core/logging_config.py</code> dosyas\u0131nda tan\u0131mlanm\u0131\u015ft\u0131r ve de\u011fi\u015ftirilmesi gerekirse bu dosya g\u00fcncellenmelidir.</p>"},{"location":"tr/deployment/logging/#log-temizleme","title":"Log Temizleme","text":"<p>Uygulama, eski log dosyalar\u0131n\u0131 otomatik olarak temizleyen bir mekanizma i\u00e7ermemektedir. Sunucuda disk alan\u0131 sorunlar\u0131n\u0131 \u00f6nlemek i\u00e7in, <code>logrotate</code> (Linux) gibi standart sistem ara\u00e7lar\u0131 veya zamanlanm\u0131\u015f g\u00f6revler (cron jobs) ile <code>logs/</code> dizinindeki eski dosyalar\u0131n periyodik olarak ar\u015fivlenmesi veya silinmesi \u00f6nerilir.</p>"},{"location":"tr/deployment/logging/#guvenlik-notlar","title":"G\u00fcvenlik Notlar\u0131","text":"<ul> <li>Eri\u015fim Kontrol\u00fc: <code>logs/</code> dizinine ve log dosyalar\u0131na eri\u015fim, sadece yetkili kullan\u0131c\u0131lar ve sistem servisleri ile s\u0131n\u0131rland\u0131r\u0131lmal\u0131d\u0131r.</li> <li>Hassas Bilgi: Geli\u015ftirme standartlar\u0131 gere\u011fi loglarda hassas bilgi bulunmamal\u0131d\u0131r. Ancak yine de, olas\u0131 s\u0131z\u0131nt\u0131lara kar\u015f\u0131 log dosyalar\u0131 g\u00fcvenli kabul edilmemelidir.</li> </ul>"},{"location":"tr/deployment/production-setup/","title":"Production (Canl\u0131 Ortam) Kurulum K\u0131lavuzu","text":"<p>Bu k\u0131lavuz, Aspectify uygulamas\u0131n\u0131n kal\u0131c\u0131 ve stabil bir servis olarak canl\u0131 ortama nas\u0131l da\u011f\u0131t\u0131laca\u011f\u0131n\u0131 a\u00e7\u0131klar.</p> <p>\u00d6n Ko\u015ful: Bu k\u0131lavuza ba\u015flamadan \u00f6nce, projenin temel kurulum ad\u0131mlar\u0131n\u0131 bildi\u011finiz varsay\u0131lmaktad\u0131r. Gerekirse, l\u00fctfen \u00f6nce Ana Kurulum K\u0131lavuzu'nu inceleyin.</p>"},{"location":"tr/deployment/production-setup/#1-production-icin-yaplandrma","title":"1. Production i\u00e7in Yap\u0131land\u0131rma","text":"<p>Geli\u015ftirme ortam\u0131ndan farkl\u0131 olarak, production ortam\u0131 i\u00e7in <code>.env</code> dosyas\u0131nda baz\u0131 de\u011ferlerin dikkatli bir \u015fekilde ayarlanmas\u0131 gerekir.</p> <ol> <li>Sunucuda proje kodunun bulundu\u011fu dizine gidin.</li> <li><code>cp .env.example .env</code> komutu ile <code>.env</code> dosyan\u0131z\u0131 olu\u015fturun.</li> <li> <p><code>.env</code> dosyas\u0131n\u0131 a\u00e7\u0131n ve \u00f6zellikle a\u015fa\u011f\u0131daki de\u011ferleri production i\u00e7in ayarlad\u0131\u011f\u0131n\u0131zdan emin olun:</p> <p><pre><code># .env (Production i\u00e7in Kritik Alanlar)\n\n# UYGULAMA AYARLARI\n# Bu, uygulaman\u0131n debug modunu kapat\u0131r ve performans\u0131 art\u0131r\u0131r.\nENVIRONMENT=production\n\n# G\u00dcVENL\u0130K\n# 'openssl rand -hex 32' gibi bir komutla olu\u015fturulmu\u015f,\n# tahmin edilemez, uzun ve karma\u015f\u0131k bir anahtar girin.\nSECRET_KEY=buraya_\u00e7ok_g\u00fc\u00e7l\u00fc_ve_rastgele_bir_anahtar_girmelisiniz\n\n# LOGLAMA\n# Production'da gereksiz loglar\u0131 \u00f6nlemek i\u00e7in INFO veya WARNING kullan\u0131n.\nLOG_LEVEL=INFO\n\n# HAR\u0130C\u0130 SERV\u0130S API ANAHTARLARI\n# T\u00fcm API anahtarlar\u0131n\u0131n production i\u00e7in olan anahtarlar oldu\u011fundan emin olun.\nGEMINI_API_KEY=[PRODUCTION_GEMINI_API_ANAHTARINIZ]\n</code></pre> \u00d6nemli Not: Proje \u015fu anda aktif geli\u015ftirme a\u015famas\u0131ndad\u0131r. Docker deste\u011fi, veritaban\u0131 entegrasyonu ve bir API katman\u0131 hen\u00fcz mevcut de\u011fildir. Bu k\u0131lavuz, projenin mevcut komut sat\u0131r\u0131 tabanl\u0131 \u00e7al\u0131\u015fmas\u0131n\u0131 a\u00e7\u0131klamaktad\u0131r.</p> </li> </ol>"},{"location":"tr/development/coding-standards/","title":"Kodlama Standartlar\u0131 ve Git \u0130\u015f Ak\u0131\u015f\u0131","text":"<p>Bu belge, Aspectify projesindeki kod kalitesini, okunabilirli\u011fini ve uzun vadeli s\u00fcrd\u00fcr\u00fclebilirli\u011fini sa\u011flamak i\u00e7in bir rehberdir. Temel felsefemiz, \"Temiz Kod\" (Clean Code) prensiplerine dayan\u0131r; yani kodun sadece \u00e7al\u0131\u015fmas\u0131 de\u011fil, ayn\u0131 zamanda ba\u015fka bir geli\u015ftirici (buna gelecekteki kendimiz de dahil) taraf\u0131ndan kolayca anla\u015f\u0131labilmesi hedeflenmektedir.</p> <p>Bu hedefe ula\u015fmak i\u00e7in Python'un resmi stil rehberi olan PEP 8'i temel al\u0131yoruz.</p>"},{"location":"tr/development/coding-standards/#kodlama-standartlar","title":"Kodlama Standartlar\u0131","text":"<p>Kodun kalitesini ve tutarl\u0131l\u0131\u011f\u0131n\u0131 sa\u011flamak i\u00e7in a\u015fa\u011f\u0131daki kurallara ve en iyi pratiklere uyulmas\u0131 beklenmektedir.</p>"},{"location":"tr/development/coding-standards/#1-isimlendirme-naming-conventions","title":"1. \u0130simlendirme (Naming Conventions)","text":"<p>Proje genelinde tutarl\u0131l\u0131\u011f\u0131 sa\u011flamak i\u00e7in a\u015fa\u011f\u0131daki isimlendirme kurallar\u0131 benimsenmi\u015ftir:</p> <ul> <li>De\u011fi\u015fkenler, Fonksiyonlar ve Mod\u00fcller: K\u00fc\u00e7\u00fck harflerle ve kelimeler aras\u0131nda alt \u00e7izgi kullan\u0131larak isimlendirilir (<code>snake_case</code>).<ul> <li>\u00d6rnek: <code>process_data</code>, <code>user_name</code></li> </ul> </li> <li>S\u0131n\u0131flar (Classes): Her kelimenin ilk harfi b\u00fcy\u00fck olacak \u015fekilde isimlendirilir (<code>PascalCase</code>).<ul> <li>\u00d6rnek: <code>AnalysisService</code>, <code>MultiModalRequest</code></li> </ul> </li> <li>Sabitler (Constants): Tamam\u0131 b\u00fcy\u00fck harflerle ve kelimeler aras\u0131nda alt \u00e7izgi kullan\u0131larak isimlendirilir (<code>SCREAMING_SNAKE_CASE</code>).<ul> <li>\u00d6rnek: <code>MAX_RETRIES</code>, <code>DEFAULT_TIMEOUT</code></li> </ul> </li> </ul>"},{"location":"tr/development/coding-standards/#2-yorumlar-ve-docstringler","title":"2. Yorumlar ve Docstring'ler","text":"<p>Anla\u015f\u0131l\u0131r kod, kendi kendini belgeleyen koddur. Ancak gerekli durumlarda, kodun \"neden\" bu \u015fekilde yaz\u0131ld\u0131\u011f\u0131n\u0131 a\u00e7\u0131klamak kritik \u00f6neme sahiptir.</p> <ul> <li>Anla\u015f\u0131lmas\u0131 zor veya karma\u015f\u0131k mant\u0131k i\u00e7eren kod bloklar\u0131n\u0131 a\u00e7\u0131klamak i\u00e7in <code>#</code> ile ba\u015flayan yorum sat\u0131rlar\u0131 kullan\u0131n.</li> <li>T\u00fcm public mod\u00fcller, s\u0131n\u0131flar ve fonksiyonlar, ne i\u015fe yarad\u0131klar\u0131n\u0131, ald\u0131klar\u0131 parametreleri ve d\u00f6nd\u00fcrd\u00fckleri de\u011feri a\u00e7\u0131klayan bir docstring (<code>\"\"\"Docstring burada.\"\"\"</code>) i\u00e7ermelidir. Bu, hem kodun anla\u015f\u0131lmas\u0131na yard\u0131mc\u0131 olur hem de gelecekte otomatik dok\u00fcmantasyon olu\u015fturmay\u0131 kolayla\u015ft\u0131r\u0131r.</li> </ul>"},{"location":"tr/development/coding-standards/#3-okunabilirlik-ve-basitlik","title":"3. Okunabilirlik ve Basitlik","text":"<ul> <li>Tek Sorumluluk Prensibi: Bir fonksiyonun \u00e7ok fazla i\u015f yapmas\u0131ndan ka\u00e7\u0131n\u0131n. M\u00fcmk\u00fcnse, her fonksiyon iyi tan\u0131mlanm\u0131\u015f tek bir sorumlulu\u011fu yerine getirmelidir.</li> <li>Tekrardan Ka\u00e7\u0131nma (DRY - Don't Repeat Yourself): Tekrar eden mant\u0131\u011f\u0131 yard\u0131mc\u0131 fonksiyonlara veya s\u0131n\u0131flara ta\u015f\u0131yarak kod tekrar\u0131n\u0131 \u00f6nleyin.</li> <li>Sat\u0131r Uzunlu\u011fu: Kodun farkl\u0131 ekranlarda daha kolay okunmas\u0131n\u0131 sa\u011flamak i\u00e7in sat\u0131r uzunlu\u011funu ideal olarak 80-100 karakter civar\u0131nda tutmak, genel kabul g\u00f6rm\u00fc\u015f bir pratiktir.</li> </ul>"},{"location":"tr/development/coding-standards/#git-is-aks","title":"Git \u0130\u015f Ak\u0131\u015f\u0131","text":"<p>Temiz bir Git ge\u00e7mi\u015fi, projenin geli\u015fimini anlamak ve olas\u0131 hatalar\u0131 takip etmek i\u00e7in en de\u011ferli ara\u00e7lar\u0131m\u0131zdan biridir.</p>"},{"location":"tr/development/coding-standards/#1-branch-dal-yonetimi","title":"1. Branch (Dal) Y\u00f6netimi","text":"<p>Her yeni g\u00f6rev i\u00e7in <code>main</code> branch'inden yeni bir dal olu\u015fturun. Bu, ana dal\u0131 her zaman stabil tutmam\u0131z\u0131 sa\u011flar. Dal isimleri, yap\u0131lan i\u015fi \u00f6zetleyen \u015fu \u00f6nekleri kullanmal\u0131d\u0131r:</p> <ul> <li><code>feature/</code>: Yeni bir \u00f6zellik eklerken (\u00f6rn. <code>feature/add-caching</code>)</li> <li><code>fix/</code>: Bir hatay\u0131 d\u00fczeltirken (\u00f6rn. <code>fix/login-bug</code>)</li> <li><code>docs/</code>: Dok\u00fcmantasyonla ilgili de\u011fi\u015fiklikler yaparken (\u00f6rn. <code>docs/update-readme</code>)</li> </ul>"},{"location":"tr/development/coding-standards/#2-commit-mesajlar","title":"2. Commit Mesajlar\u0131","text":"<p>Anla\u015f\u0131l\u0131r bir proje ge\u00e7mi\u015fi, en az kodun kendisi kadar de\u011ferlidir. Bu nedenle, \"Conventional Commits\" standard\u0131n\u0131 takip ediyoruz.</p> <ul> <li>Format: <code>&lt;tip&gt;: &lt;k\u0131sa a\u00e7\u0131klama&gt;</code></li> <li> <p>\u00d6rnek Tipler:</p> <ul> <li><code>feat</code>: Yeni bir \u00f6zellik eklendi\u011finde.</li> <li><code>fix</code>: Bir hata d\u00fczeltildi\u011finde.</li> <li><code>docs</code>: Sadece dok\u00fcmantasyonda de\u011fi\u015fiklik yap\u0131ld\u0131\u011f\u0131nda.</li> <li><code>style</code>: Kodun anlam\u0131n\u0131 etkilemeyen formatlama de\u011fi\u015fiklikleri.</li> <li><code>refactor</code>: Bir hatay\u0131 d\u00fczeltmeyen veya bir \u00f6zellik eklemeyen kod yeniden d\u00fczenlemesi.</li> <li><code>test</code>: Eksik testlerin eklenmesi veya mevcut testlerin d\u00fczeltilmesi.</li> <li><code>chore</code>: Build s\u00fcreci veya yard\u0131mc\u0131 ara\u00e7larla ilgili de\u011fi\u015fiklikler.</li> </ul> </li> <li> <p>\u0130yi Commit Mesaj\u0131 \u00d6rnekleri: <pre><code>feat: Add multi-modal request support for audio files\nfix: Correctly handle Unicode characters in text analysis\ndocs: Update local setup guide with Docker instructions\n</code></pre></p> </li> </ul>"},{"location":"tr/development/local-setup/","title":"Geli\u015ftirme Ortam\u0131 Kurulumu","text":"<p>Bu k\u0131lavuz, projeye kod katk\u0131s\u0131nda bulunmak i\u00e7in geli\u015ftirme ortam\u0131n\u0131z\u0131 nas\u0131l haz\u0131rlayaca\u011f\u0131n\u0131z\u0131 a\u00e7\u0131klar.</p>"},{"location":"tr/development/local-setup/#adm-1-temel-proje-kurulumu","title":"Ad\u0131m 1: Temel Proje Kurulumu","text":"<p>Geli\u015ftirme s\u00fcrecine ba\u015flamadan \u00f6nce, projenin t\u00fcm ba\u011f\u0131ml\u0131l\u0131klar\u0131n\u0131 kurup uygulamay\u0131 yerel makinenizde \u00e7al\u0131\u015f\u0131r hale getirmeniz gerekmektedir. Bu ad\u0131mlar, projenin temel kurulum k\u0131lavuzunda detayl\u0131 bir \u015fekilde anlat\u0131lm\u0131\u015ft\u0131r.</p> <p>L\u00fctfen a\u015fa\u011f\u0131daki k\u0131lavuzu takip ederek temel kurulumu tamamlay\u0131n ve ard\u0131ndan bu sayfaya geri d\u00f6n\u00fcn.</p> <p>\u27a1\ufe0f Ana Kurulum K\u0131lavuzu'na gidin</p>"},{"location":"tr/development/local-setup/#adm-2-gelistirici-araclar-ve-is-akslar","title":"Ad\u0131m 2: Geli\u015ftirici Ara\u00e7lar\u0131 ve \u0130\u015f Ak\u0131\u015flar\u0131","text":"<p>Temel kurulumu ba\u015far\u0131yla tamamlad\u0131ysan\u0131z, art\u0131k kod yazmaya haz\u0131rs\u0131n\u0131z. Verimli ve tutarl\u0131 bir geli\u015ftirme s\u00fcreci i\u00e7in a\u015fa\u011f\u0131daki k\u0131lavuzlar\u0131 incelemeniz kritik \u00f6neme sahiptir.</p>"},{"location":"tr/development/local-setup/#kod-kalitesi-ve-standartlar","title":"\u2705 Kod Kalitesi ve Standartlar","text":"<p>Projemizde temiz, okunabilir ve tutarl\u0131 bir kod taban\u0131 olu\u015fturmay\u0131 hedefliyoruz. Yazd\u0131\u011f\u0131n\u0131z kodun bu standartlara uygun oldu\u011fundan emin olmak i\u00e7in l\u00fctfen a\u015fa\u011f\u0131daki belgeyi dikkatlice okuyun.</p> <ul> <li>Kodlama Standartlar\u0131 K\u0131lavuzu</li> </ul>"},{"location":"tr/development/local-setup/#test-surecleri","title":"\ud83e\uddea Test S\u00fcre\u00e7leri","text":"<p>Yazd\u0131\u011f\u0131n\u0131z her yeni \u00f6zelli\u011fin veya yapt\u0131\u011f\u0131n\u0131z her hata d\u00fczeltmesinin mevcut sistemi bozmamas\u0131n\u0131 sa\u011flamak ve kodunuzun do\u011frulu\u011funu kan\u0131tlamak i\u00e7in testler yaz\u0131yoruz. Testlerin nas\u0131l \u00e7al\u0131\u015ft\u0131r\u0131laca\u011f\u0131n\u0131 ve yeni testlerin nas\u0131l eklenece\u011fini \u00f6\u011frenmek i\u00e7in:</p> <ul> <li>Test K\u0131lavuzu</li> </ul>"},{"location":"tr/development/local-setup/#loglama-ve-hata-ayklama","title":"\ud83e\udeb5 Loglama ve Hata Ay\u0131klama","text":"<p>Geli\u015ftirme s\u0131ras\u0131nda kodunuzun davran\u0131\u015f\u0131n\u0131 anlamak ve hatalar\u0131 ay\u0131klamak i\u00e7in loglama sistemini etkin bir \u015fekilde kullanman\u0131z beklenir. Kodunuzda loglar\u0131 nas\u0131l kullanaca\u011f\u0131n\u0131z\u0131 \u00f6\u011frenmek i\u00e7in:</p> <ul> <li>Geli\u015ftirici i\u00e7in Loglama K\u0131lavuzu</li> </ul>"},{"location":"tr/development/logging/","title":"Geli\u015ftirici i\u00e7in Loglama K\u0131lavuzu","text":""},{"location":"tr/development/logging/#logger-kullanm","title":"Logger Kullan\u0131m\u0131","text":"<p>Uygulaman\u0131n ana logger'\u0131 <code>app.core.logging_config</code> mod\u00fcl\u00fcnden import edilebilir. Ancak en iyi pratik, her mod\u00fcl\u00fcn kendi logger'\u0131n\u0131 olu\u015fturmas\u0131d\u0131r.</p> <pre><code>import logging\n\n# Mod\u00fcle \u00f6zel bir logger olu\u015fturun\nlogger = logging.getLogger(__name__)\n\n# Logger'\u0131 kullan\u0131n\nlogger.info(\"Bu mod\u00fcl ba\u015flat\u0131ld\u0131.\")\n</code></pre>"},{"location":"tr/development/logging/#log-seviyeleri-ve-kullanm-alanlar","title":"Log Seviyeleri ve Kullan\u0131m Alanlar\u0131","text":"<p>Do\u011fru log seviyesini se\u00e7mek, loglar\u0131n anlaml\u0131 olmas\u0131n\u0131 sa\u011flar.</p> Seviye A\u00e7\u0131klama Ne Zaman Kullan\u0131lmal\u0131? <code>DEBUG</code> Geli\u015ftirme s\u0131ras\u0131nda hata ay\u0131klamak i\u00e7in gereken ayr\u0131nt\u0131l\u0131 bilgiler. Bir de\u011fi\u015fkenin de\u011ferini veya bir fonksiyonun ak\u0131\u015f\u0131n\u0131 takip ederken. <code>INFO</code> Uygulaman\u0131n normal ak\u0131\u015f\u0131n\u0131 g\u00f6steren bilgilendirici mesajlar. Bir i\u015flemin ba\u015flad\u0131\u011f\u0131n\u0131, bitti\u011fini veya \u00f6nemli bir kilometre ta\u015f\u0131na ula\u015ft\u0131\u011f\u0131n\u0131 belirtmek i\u00e7in. <code>WARNING</code> Beklenmedik ancak uygulaman\u0131n \u00e7al\u0131\u015fmas\u0131n\u0131 engellemeyen durumlar. Bir API'den yava\u015f yan\u0131t al\u0131nmas\u0131, ge\u00e7ici bir ba\u011flant\u0131 sorunu gibi potansiyel sorunlar. <code>ERROR</code> Uygulaman\u0131n bir i\u015flemi tamamlamas\u0131n\u0131 engelleyen ciddi hatalar. Veritaban\u0131 ba\u011flant\u0131 hatas\u0131, dosya bulunamamas\u0131, ge\u00e7ersiz girdi gibi durumlar. <code>CRITICAL</code> Uygulaman\u0131n tamamen \u00e7\u00f6kmesine neden olabilecek \u00e7ok ciddi hatalar. Diskte yer kalmamas\u0131, belle\u011fin t\u00fckenmesi gibi sistemsel krizler."},{"location":"tr/development/logging/#hata-yonetimi-ve-loglama","title":"Hata Y\u00f6netimi ve Loglama","text":"<p>Hatalar\u0131 loglarken, m\u00fcmk\u00fcn oldu\u011funca fazla ba\u011flam sa\u011flamak \u00f6nemlidir. <code>try...except</code> bloklar\u0131 i\u00e7inde loglama yapmak standart bir pratiktir.</p> <pre><code>try:\n    # Hata potansiyeli olan bir i\u015flem\n    result = risky_operation()\n    logger.info(\"Riskli i\u015flem ba\u015far\u0131yla tamamland\u0131.\")\nexcept Exception as e:\n    # exc_info=True parametresi, hatan\u0131n stack trace'ini loga ekler.\n    # Bu, hata ay\u0131klama i\u00e7in hayati \u00f6neme sahiptir.\n    logger.error(f\"Beklenmeyen bir hata olu\u015ftu: {e}\", exc_info=True)\n    raise # Hatay\u0131 tekrar y\u00fckselterek program ak\u0131\u015f\u0131n\u0131n devam etmesini engelle\n</code></pre>"},{"location":"tr/development/logging/#guvenlik-hassas-bilgileri-loglamaktan-kacnn","title":"G\u00fcvenlik: Hassas Bilgileri Loglamaktan Ka\u00e7\u0131n\u0131n","text":"<p>Asla kullan\u0131c\u0131 \u015fifreleri, API anahtarlar\u0131, token'lar veya ki\u015fisel veriler gibi hassas bilgileri loglamay\u0131n.</p> <pre><code># \u274c YANLI\u015e YAKLA\u015eIM\nlogger.debug(f\"Kullan\u0131c\u0131 giri\u015fi: {username}, \u015fifre: {password}\")\n\n# \u2705 DO\u011eRU YAKLA\u015eIM\nlogger.info(f\"Kullan\u0131c\u0131 giri\u015fi denemesi: {username}\")\n</code></pre> <p>Gerekli durumlarda, loglamadan \u00f6nce veriyi maskeleyen yard\u0131mc\u0131 fonksiyonlar kullan\u0131n.</p>"},{"location":"tr/development/testing-guide/","title":"Test K\u0131lavuzu","text":""},{"location":"tr/development/testing-guide/#test-felsefesi-ve-gelecek-vizyonu","title":"Test Felsefesi ve Gelecek Vizyonu","text":"<ul> <li>Birim Testleri (Unit Tests): Her bir fonksiyonun veya s\u0131n\u0131f\u0131n, di\u011fer bile\u015fenlerden izole bir \u015fekilde do\u011fru \u00e7al\u0131\u015ft\u0131\u011f\u0131n\u0131 do\u011frulayan testlerdir. Kodun temel yap\u0131 ta\u015flar\u0131n\u0131n sa\u011flaml\u0131\u011f\u0131n\u0131 garanti ederler.</li> <li>Entegrasyon Testleri (Integration Tests): Birden fazla mod\u00fcl\u00fcn (\u00f6rne\u011fin bir API endpoint'inin bir servisi \u00e7a\u011f\u0131rmas\u0131) birlikte uyum i\u00e7inde \u00e7al\u0131\u015ft\u0131\u011f\u0131n\u0131 kontrol eden testlerdir. Sistemin b\u00fct\u00fcnsel sa\u011fl\u0131\u011f\u0131 hakk\u0131nda bilgi verirler.</li> </ul> <p>Mevcut Durum: Projenin bu a\u015famas\u0131nda test altyap\u0131s\u0131 planlanm\u0131\u015f olup, test kapsam\u0131 aktif olarak geli\u015ftirilme s\u00fcrecindedir. Gelecekte eklenecek t\u00fcm yeni \u00f6zelliklerin ve yap\u0131lacak hata d\u00fczeltmelerinin ilgili testlerle birlikte sunulmas\u0131 hedeflenmektedir.</p>"},{"location":"tr/development/testing-guide/#kullanlacak-araclar","title":"Kullan\u0131lacak Ara\u00e7lar","text":"<p>Projemizdeki testleri yazmak ve \u00e7al\u0131\u015ft\u0131rmak i\u00e7in Python ekosisteminin standart arac\u0131 olan Pytest'i kullanaca\u011f\u0131z.</p> <ul> <li>Kurulum: Pytest, <code>requirements.txt</code> (veya <code>requirements-dev.txt</code>) dosyas\u0131na eklenerek projenin geli\u015ftirme ba\u011f\u0131ml\u0131l\u0131klar\u0131 aras\u0131nda yer alacakt\u0131r.</li> </ul>"},{"location":"tr/development/testing-guide/#testleri-calstrma","title":"Testleri \u00c7al\u0131\u015ft\u0131rma","text":"<p>Test paketi olu\u015fturuldu\u011funda, projenin ana dizinindeyken t\u00fcm testleri \u00e7al\u0131\u015ft\u0131rmak i\u00e7in a\u015fa\u011f\u0131daki komut kullan\u0131lacakt\u0131r:</p> <pre><code>pytest\n</code></pre>"},{"location":"tr/development/testing-guide/#yeni-testler-nasl-yazlmal","title":"Yeni Testler Nas\u0131l Yaz\u0131lmal\u0131?","text":"<p>Gelecekte yaz\u0131lacak testler i\u00e7in a\u015fa\u011f\u0131daki yap\u0131 ve standartlar takip edilecektir.</p>"},{"location":"tr/development/testing-guide/#1-dosya-yaps-ve-isimlendirme","title":"1. Dosya Yap\u0131s\u0131 ve \u0130simlendirme","text":"<ul> <li>T\u00fcm test dosyalar\u0131, projenin ana dizinindeki <code>tests/</code> klas\u00f6r\u00fcnde yer alacakt\u0131r.</li> <li><code>tests/</code> klas\u00f6r\u00fcn\u00fcn i\u00e7 yap\u0131s\u0131, kaynak kodun bulundu\u011fu <code>app/</code> klas\u00f6r\u00fcn\u00fcn yap\u0131s\u0131n\u0131 yans\u0131tacakt\u0131r.</li> <li>Test dosyalar\u0131n\u0131n ve fonksiyonlar\u0131n\u0131n isimleri <code>test_</code> \u00f6neki ile ba\u015flamal\u0131d\u0131r.</li> </ul> <p>\u00d6rnek Yap\u0131:</p> <pre><code>\u251c\u2500\u2500 app/\n\u2502   \u2514\u2500\u2500 logic/\n\u2502       \u2514\u2500\u2500 language_detector.py\n\u2514\u2500\u2500 tests/\n    \u2514\u2500\u2500 logic/\n        \u2514\u2500\u2500 test_language_detector.py\n</code></pre>"},{"location":"tr/development/testing-guide/#2-ornek-bir-test-yazm","title":"2. \u00d6rnek Bir Test Yaz\u0131m\u0131","text":"<p>A\u015fa\u011f\u0131da, basit bir yard\u0131mc\u0131 fonksiyon i\u00e7in nas\u0131l bir test yaz\u0131labilece\u011fine dair bir \u00f6rnek bulunmaktad\u0131r.</p> <p>Test Edilecek Fonksiyon (<code>app/utils/formatters.py</code>):</p> <pre><code>def normalize_text(text: str) -&gt; str:\n    \"\"\"Metni k\u00fc\u00e7\u00fck harfe \u00e7evirir ve ba\u015f\u0131ndaki/sonundaki bo\u015fluklar\u0131 temizler.\"\"\"\n    if not isinstance(text, str):\n        return \"\"\n    return text.strip().lower()\n</code></pre> <p>Test Kodu (<code>tests/utils/test_formatters.py</code>):</p> <pre><code>from app.utils.formatters import normalize_text\n\ndef test_normalize_text_with_mixed_case_and_whitespace():\n    \"\"\"Kar\u0131\u015f\u0131k harf ve bo\u015fluk i\u00e7eren metni do\u011fru normalle\u015ftirmeli.\"\"\"\n    assert normalize_text(\"  Hello World  \") == \"hello world\"\n\ndef test_normalize_text_with_empty_string():\n    \"\"\"Bo\u015f metin verildi\u011finde bo\u015f metin d\u00f6nd\u00fcrmeli.\"\"\"\n    assert normalize_text(\"\") == \"\"\n\ndef test_normalize_text_with_already_normalized_string():\n    \"\"\"Zaten normalle\u015ftirilmi\u015f metni de\u011fi\u015ftirmemeli.\"\"\"\n    assert normalize_text(\"zaten normal\") == \"zaten normal\"\n</code></pre> <p>Bu k\u0131lavuz, Aspectify projesinde tutarl\u0131 ve etkili bir test k\u00fclt\u00fcr\u00fc olu\u015fturmak i\u00e7in bir ba\u015flang\u0131\u00e7 noktas\u0131d\u0131r.</p>"},{"location":"tr/getting-started/configuration/","title":"Yap\u0131land\u0131rma","text":"<p>Aspectify, <code>app.core.config</code> mod\u00fcl\u00fc arac\u0131l\u0131\u011f\u0131yla merkezi bir yap\u0131land\u0131rma sistemi kullan\u0131r.</p>"},{"location":"tr/getting-started/configuration/#yaplandrma-dosyas","title":"Yap\u0131land\u0131rma Dosyas\u0131","text":"<p>Ana yap\u0131land\u0131rma <code>app/core/config.py</code> dosyas\u0131nda tan\u0131mlan\u0131r:</p> <pre><code>from dotenv import load_dotenv\nload_dotenv()\n\nfrom pydantic_settings import BaseSettings, SettingsConfigDict\nfrom pydantic import SecretStr\n\nclass Settings(BaseSettings):\n    model_config = SettingsConfigDict(env_file=\".env\", extra=\"ignore\")\n\n    PROJECT_NAME: str = \"Aspectify\"\n    PROJECT_VERSION: str = \"1.0.0\"\n    LOG_LEVEL: str = \"INFO\"\n    GOOGLE_API_KEY: SecretStr | None = None\n    GEMINI_2_5_PRO_MODEL: str = \"gemini-2.5-pro\"\n</code></pre>"},{"location":"tr/getting-started/configuration/#ortam-degiskenleri","title":"Ortam De\u011fi\u015fkenleri","text":"<p>Kurulum (installation) dosyas\u0131ndaki talimatlar\u0131 takip ederek <code>.env</code> dosyas\u0131 olu\u015fturun.</p>"},{"location":"tr/getting-started/configuration/#yaplandrma-secenekleri","title":"Yap\u0131land\u0131rma Se\u00e7enekleri","text":""},{"location":"tr/getting-started/configuration/#log-seviyeleri","title":"Log Seviyeleri","text":"<p>Mevcut log seviyeleri:</p> <ul> <li><code>INFO</code>: Program y\u00fcr\u00fctmesi hakk\u0131nda genel bilgi</li> </ul>"},{"location":"tr/getting-started/configuration/#ai-modelleri","title":"AI Modelleri","text":"<p>\u015eu anda desteklenen Gemini modelleri:</p> <ul> <li><code>gemini-2.5-pro</code>: Gemini latest model</li> </ul>"},{"location":"tr/getting-started/configuration/#yaplandrmay-kullanma","title":"Yap\u0131land\u0131rmay\u0131 Kullanma","text":"<p>Kodunuzda yap\u0131land\u0131rma ayarlar\u0131na eri\u015fin:</p> <pre><code>from app.core.config import settings\n\nprint(f\"Proje: {settings.PROJECT_NAME}\")\nprint(f\"S\u00fcr\u00fcm: {settings.PROJECT_VERSION}\")\nprint(f\"Log Seviyesi: {settings.LOG_LEVEL}\")\n\nif settings.GOOGLE_API_KEY:\n    api_key = settings.GOOGLE_API_KEY.get_secret_value()\n</code></pre>"},{"location":"tr/getting-started/configuration/#dogrulama","title":"Do\u011frulama","text":"<p>Yap\u0131land\u0131rma sistemi do\u011frulama i\u00e7in Pydantic kullan\u0131r:</p> <ul> <li>T\u00fcr kontrol\u00fcn\u00fc sa\u011flayarak d\u011fru veri t\u00fcrlerini sa\u011flar.</li> <li>Varsay\u0131lan de\u011ferler ile makul de\u011ferlerini atar.</li> </ul>"},{"location":"tr/getting-started/configuration/#sorun-giderme","title":"Sorun Giderme","text":""},{"location":"tr/getting-started/configuration/#yaplandrma-yuklenmiyor","title":"Yap\u0131land\u0131rma Y\u00fcklenmiyor","text":"<ol> <li><code>.env</code> dosyas\u0131n\u0131n proje k\u00f6k dizininde oldu\u011funu kontrol edin</li> <li>Dosya izinlerini do\u011frulay\u0131n</li> <li><code>.env</code> dosyas\u0131nda s\u00f6zdizimi hatas\u0131 olmad\u0131\u011f\u0131ndan emin olun</li> </ol>"},{"location":"tr/getting-started/configuration/#api-anahtar-sorunlar","title":"API Anahtar\u0131 Sorunlar\u0131","text":"<ol> <li>Anahtar\u0131n do\u011fru kopyaland\u0131\u011f\u0131n\u0131 do\u011frulay\u0131n (ekstra bo\u015fluk yok)</li> <li>Anahtar\u0131n uygun izinlere sahip oldu\u011funu kontrol edin</li> <li>Anahtar\u0131n s\u00fcresi dolmam\u0131\u015f oldu\u011fundan emin olun</li> </ol>"},{"location":"tr/getting-started/configuration/#model-yaplandrmas","title":"Model Yap\u0131land\u0131rmas\u0131","text":"<ol> <li>Model ad\u0131n\u0131n do\u011fru oldu\u011funu do\u011frulay\u0131n</li> <li>Modelin b\u00f6lgenizde mevcut oldu\u011funu kontrol edin</li> <li>API anahtar\u0131n\u0131n modele eri\u015fimi oldu\u011fundan emin olun</li> </ol>"},{"location":"tr/getting-started/installation/","title":"Kurulum","text":"<p>Bu rehber, Aspectify geli\u015ftirme ortam\u0131n\u0131 kurman\u0131za yard\u0131mc\u0131 olacak.</p>"},{"location":"tr/getting-started/installation/#on-gereksinimler","title":"\u00d6n Gereksinimler","text":"<ul> <li>Python 3.10</li> <li>pip (Python paket y\u00fckleyicisi)</li> <li>Git</li> </ul>"},{"location":"tr/getting-started/installation/#adm-1-depoyu-klonlayn","title":"Ad\u0131m 1: Depoyu Klonlay\u0131n","text":"<pre><code>git clone https://github.com/hanifekaptan/Aspectify.git\ncd Aspectify\n</code></pre>"},{"location":"tr/getting-started/installation/#adm-2-sanal-ortam-olusturun","title":"Ad\u0131m 2: Sanal Ortam Olu\u015fturun","text":"<pre><code>python -m venv .venv\n</code></pre>"},{"location":"tr/getting-started/installation/#adm-3-bagmllklar-yukleyin","title":"Ad\u0131m 3: Ba\u011f\u0131ml\u0131l\u0131klar\u0131 Y\u00fckleyin","text":"<pre><code>pip install -r requirements.txt\n</code></pre>"},{"location":"tr/getting-started/installation/#adm-4-ortam-yaplandrmas","title":"Ad\u0131m 4: Ortam Yap\u0131land\u0131rmas\u0131","text":"<p>Proje k\u00f6k dizininde <code>.env</code> dosyas\u0131 olu\u015fturun:</p> <pre><code>GOOGLE_API_KEY=your_google_api_key_here\nLOG_LEVEL=INFO\nPROJECT_NAME=\"Aspectify\"\nPROJECT_VERSION=\"1.0.0\"\n</code></pre>"},{"location":"tr/getting-started/installation/#adm-5-kurulumu-dogrulayn","title":"Ad\u0131m 5: Kurulumu Do\u011frulay\u0131n","text":"<p>Test beti\u011fini \u00e7al\u0131\u015ft\u0131rarak her \u015feyin \u00e7al\u0131\u015ft\u0131\u011f\u0131n\u0131 do\u011frulay\u0131n:</p> <pre><code>python main.py\n</code></pre> <p>\u015euna benzer bir \u00e7\u0131kt\u0131 g\u00f6rmelisiniz:</p> <pre><code>--------------------------------------------------\nTest verileri okunuyor ve duygu analizi yap\u0131l\u0131yor...\n--------------------------------------------------\n\nAnaliz Edilen Metin: Yeni ald\u0131\u011f\u0131m telefonun kameras\u0131 harika foto\u011fraflar \u00e7ekiyor ama bataryas\u0131 bir g\u00fcn\u00fc zor \u00e7\u0131kar\u0131yor.\nBeklenen Duygu: neutral\nAjan Sonucu (Polarite): neutral\nAjan Sonucu (Skor): 0.5\nAjan Sonucu (Aspektler): [AspectAnalysisResponse(aspect='kamera', sentiment='positive', score=0.98), AspectAnalysisResponse(aspect='batarya', sentiment='negative', score=0.99)]\n</code></pre>"},{"location":"tr/getting-started/installation/#sorun-giderme","title":"Sorun Giderme","text":""},{"location":"tr/getting-started/installation/#yaygn-sorunlar","title":"Yayg\u0131n Sorunlar","text":"<ol> <li>ModuleNotFoundError: Sanal ortam\u0131 aktifle\u015ftirdi\u011finizden emin olun</li> <li>API Key Hatas\u0131: <code>.env</code> dosyas\u0131nda Google API anahtar\u0131n\u0131z\u0131n do\u011fru ayarland\u0131\u011f\u0131n\u0131 kontrol edin</li> </ol>"},{"location":"tr/getting-started/installation/#google-api-anahtar-alma","title":"Google API Anahtar\u0131 Alma","text":"<ol> <li>Google AI Studio adresini ziyaret edin</li> <li>Yeni bir proje olu\u015fturun veya mevcut birini se\u00e7in</li> <li>API anahtar\u0131 olu\u015fturun</li> <li>Anahtar\u0131 <code>.env</code> dosyan\u0131za kopyalay\u0131n</li> </ol>"},{"location":"tr/getting-started/installation/#sonraki-admlar","title":"Sonraki Ad\u0131mlar","text":"<ul> <li>Yap\u0131land\u0131rma - Uygulama yap\u0131land\u0131rmas\u0131 hakk\u0131nda bilgi edinin</li> <li>H\u0131zl\u0131 Ba\u015flang\u0131\u00e7 - \u0130lk analizinizi \u00e7al\u0131\u015ft\u0131r\u0131n</li> </ul>"},{"location":"tr/getting-started/quick-start/","title":"H\u0131zl\u0131 Ba\u015flang\u0131\u00e7","text":"<p>Bu rehber, Aspectify ile ilk duygu analizinizi yapman\u0131za yard\u0131mc\u0131 olacak.</p>"},{"location":"tr/getting-started/quick-start/#temel-kullanm","title":"Temel Kullan\u0131m","text":""},{"location":"tr/getting-started/quick-start/#1-metin-analizi","title":"1. Metin Analizi","text":"<p>En basit kullan\u0131m \u015fekli:</p> <pre><code>import asyncio\nfrom app.agents.absa_agent import run_absa\n\nasync def main():\n    text = \"Bu telefonun kameras\u0131 harika ama bataryas\u0131 \u00e7ok k\u00f6t\u00fc.\"\n    result = await run_absa(text)\n\n    print(f\"Genel Duygu: {result.polarity}\")\n    print(f\"G\u00fcven Skoru: {result.score}\")\n    print(\"Y\u00f6nelimler (aspects):\")\n    for aspect in result.aspects:\n        print(f\"  - {aspect.aspect}: {aspect.sentiment} ({aspect.score})\")\n\nasyncio.run(main())\n</code></pre>"},{"location":"tr/getting-started/quick-start/#2-ses-dosyas-analizi","title":"2. Ses Dosyas\u0131 Analizi","text":"<p>Ses dosyalar\u0131n\u0131 da analiz edebilirsiniz:</p> <pre><code>import asyncio\nfrom app.agents.absa_agent import run_absa\n\nasync def main():\n    audio_path = \"path/to/your/audio.wav\"\n    result = await run_absa(audio_path)\n\n    print(f\"Transkripsiyon: {result.text}\")\n    print(f\"Genel Duygu: {result.polarity}\")\n    print(f\"G\u00fcven Skoru: {result.score}\")\n\nasyncio.run(main())\n</code></pre>"},{"location":"tr/getting-started/quick-start/#desteklenen-formatlar","title":"Desteklenen Formatlar","text":""},{"location":"tr/getting-started/quick-start/#metin-girisi","title":"Metin Giri\u015fi","text":"<ul> <li>Do\u011frudan metin string'i</li> <li>Herhangi bir dilde metin</li> </ul>"},{"location":"tr/getting-started/quick-start/#ses-dosyalar","title":"Ses Dosyalar\u0131","text":"<ul> <li><code>.wav</code> - WAV format\u0131</li> <li><code>.mp3</code> - MP3 format\u0131</li> <li><code>.m4a</code> - M4A format\u0131</li> <li><code>.flac</code> - FLAC format\u0131</li> </ul>"},{"location":"tr/getting-started/quick-start/#ornek-ckt","title":"\u00d6rnek \u00c7\u0131kt\u0131","text":"<pre><code>{\n  \"id\": \"123e4567-e89b-12d3-a456-426614174000\",\n  \"polarity\": \"neutral\",\n  \"score\": 0.5,\n  \"aspects\": [\n    {\n      \"aspect\": \"kamera\",\n      \"sentiment\": \"positive\",\n      \"score\": 0.95,\n      \"quote\": \"kamera harika\"\n    },\n    {\n      \"aspect\": \"batarya\",\n      \"sentiment\": \"negative\",\n      \"score\": 0.98,\n      \"quote\": \"bataryas\u0131 \u00e7ok k\u00f6t\u00fc\"\n    }\n  ],\n  \"message\": \"ABSA completed successfully.\",\n  \"text\": \"Bu telefonun kameras\u0131 harika ama bataryas\u0131 \u00e7ok k\u00f6t\u00fc.\"\n}\n</code></pre>"},{"location":"tr/getting-started/quick-start/#duygu-turleri","title":"Duygu T\u00fcrleri","text":""},{"location":"tr/getting-started/quick-start/#polarity-genel-duygu","title":"Polarity (Genel Duygu)","text":"<ul> <li><code>positive</code>: Pozitif duygu</li> <li><code>negative</code>: Negatif duygu</li> <li><code>neutral</code>: N\u00f6tr duygu</li> </ul>"},{"location":"tr/getting-started/quick-start/#sentiment-yonelim-aspect-duygusu","title":"Sentiment (Y\u00f6nelim (aspect) Duygusu)","text":"<ul> <li><code>positive</code>: Pozitif</li> <li><code>negative</code>: Negatif</li> <li><code>neutral</code>: N\u00f6tr</li> </ul>"},{"location":"tr/getting-started/quick-start/#guven-skorlar","title":"G\u00fcven Skorlar\u0131","text":"<p>Skorlar 0.0 ile 1.0 aras\u0131nda de\u011fi\u015fir:</p> <ul> <li>0.0 - 0.3: D\u00fc\u015f\u00fck g\u00fcven</li> <li>0.3 - 0.7: Orta g\u00fcven</li> <li>0.7 - 1.0: Y\u00fcksek g\u00fcven</li> </ul>"},{"location":"tr/getting-started/quick-start/#hzl-test","title":"H\u0131zl\u0131 Test","text":"<p>Test verilerinizi kullanarak h\u0131zl\u0131 bir test yap\u0131n:</p> <pre><code>python main.py\n</code></pre> <p>Bu komut <code>test_data/text/test_texts.jsonl</code> dosyas\u0131ndaki \u00f6rnek metinleri analiz eder.</p>"},{"location":"tr/getting-started/quick-start/#gelismis-kullanm","title":"Geli\u015fmi\u015f Kullan\u0131m","text":""},{"location":"tr/getting-started/quick-start/#ozel-dil-belirtme","title":"\u00d6zel Dil Belirtme","text":"<p>Dil tespiti, uygulamaya entegre edilmi\u015f ilgili mod\u00fcller taraf\u0131ndan otomatik olarak tespit edilmesine kar\u015f\u0131n, a\u015fa\u011f\u0131daki kullan\u0131m ile istenilen dil giri\u015fi sa\u011flanabilir.</p> <pre><code>from app.tools.absa_analyzer import absa_analyzer_tool\n\nresult = absa_analyzer_tool.invoke({\n    \"text\": \"Bu \u00fcr\u00fcn ger\u00e7ekten harika!\",\n    \"language\": \"tr\"\n})\n\nresult = absa_analyzer_tool.invoke({\n    \"text\": \"This product is amazing!\",\n    \"language\": \"en\"\n})\n</code></pre>"},{"location":"tr/getting-started/quick-start/#toplu-analiz","title":"Toplu Analiz","text":"<pre><code>import asyncio\nfrom app.agents.absa_agent import run_absa\n\nasync def analyze_multiple_texts(texts):\n    results = []\n    for text in texts:\n        result = await run_absa(text)\n        results.append(result)\n    return results\n\ntexts = [\n    \"Bu telefon harika!\",\n    \"Kamera kalitesi k\u00f6t\u00fc.\",\n    \"Fiyat uygun ama performans yetersiz.\"\n]\n\nresults = asyncio.run(analyze_multiple_texts(texts))\n</code></pre>"},{"location":"tr/getting-started/quick-start/#sorun-giderme","title":"Sorun Giderme","text":""},{"location":"tr/getting-started/quick-start/#yaygn-hatalar","title":"Yayg\u0131n Hatalar","text":"<ol> <li>API Key Hatas\u0131: <code>.env</code> dosyas\u0131nda Google API anahtar\u0131n\u0131z\u0131 kontrol edin</li> <li>Bo\u015f Metin: Analiz edilecek metin bo\u015f olamaz</li> <li>Desteklenmeyen Format: Ses dosyas\u0131 format\u0131n\u0131 kontrol edin</li> </ol>"},{"location":"tr/getting-started/quick-start/#performans-ipuclar","title":"Performans \u0130pu\u00e7lar\u0131","text":"<ol> <li>Toplu \u0130\u015flem: Birden fazla metni ayn\u0131 anda i\u015fleyin</li> <li>\u00d6nbellekleme: Sonu\u00e7lar\u0131 \u00f6nbelle\u011fe al\u0131n</li> <li>Asenkron Kullan\u0131m: <code>async/await</code> kullan\u0131n</li> </ol>"},{"location":"tr/getting-started/quick-start/#sonraki-admlar","title":"Sonraki Ad\u0131mlar","text":"<ul> <li>Mimari - Sistem mimarisi hakk\u0131nda genel bilgi</li> <li>Geli\u015ftirme - Geli\u015ftirme k\u0131lavuzu hakk\u0131nda bilgi</li> <li>Da\u011f\u0131t\u0131m - Da\u011f\u0131t\u0131m i\u00e7in altyap\u0131 gereksinimleri hakk\u0131nda bilgi</li> <li>API Referans\u0131 - API endpointleri hakk\u0131nda bilgi</li> </ul>"}]}